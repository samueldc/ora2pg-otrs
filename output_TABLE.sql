-- Generated by Ora2Pg, the Oracle database Schema converter, version 23.2
-- Copyright 2000-2022 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:OLTPDES

SET client_encoding TO 'UTF8';

\set ON_ERROR_STOP ON

CREATE SCHEMA IF NOT EXISTS public;
ALTER SCHEMA public OWNER TO otrs;

SET search_path = public,public;


CREATE TABLE acl (
	id integer NOT NULL,
	name varchar(200) NOT NULL,
	comments varchar(250),
	description varchar(250),
	valid_id smallint NOT NULL,
	stop_after_match smallint,
	config_match text,
	config_change text,
	create_time timestamp NOT NULL,
	create_by integer NOT NULL,
	change_time timestamp NOT NULL,
	change_by integer NOT NULL
) ;
ALTER  TABLE acl OWNER TO otrs;
CREATE INDEX acl_change_by ON acl (change_by);
CREATE INDEX acl_create_by ON acl (create_by);
CREATE INDEX acl_valid_id ON acl (valid_id);
ALTER TABLE acl ADD PRIMARY KEY (id);
ALTER TABLE acl ADD UNIQUE (name);
ALTER TABLE acl ALTER COLUMN ID SET NOT NULL;
ALTER TABLE acl ALTER COLUMN NAME SET NOT NULL;
ALTER TABLE acl ALTER COLUMN VALID_ID SET NOT NULL;
ALTER TABLE acl ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE acl ALTER COLUMN CREATE_BY SET NOT NULL;
ALTER TABLE acl ALTER COLUMN CHANGE_TIME SET NOT NULL;
ALTER TABLE acl ALTER COLUMN CHANGE_BY SET NOT NULL;


CREATE TABLE acl_sync (
	acl_id varchar(200) NOT NULL,
	sync_state varchar(30) NOT NULL,
	create_time timestamp NOT NULL,
	change_time timestamp NOT NULL
) ;
ALTER  TABLE acl_sync OWNER TO otrs;
ALTER TABLE acl_sync ALTER COLUMN ACL_ID SET NOT NULL;
ALTER TABLE acl_sync ALTER COLUMN SYNC_STATE SET NOT NULL;
ALTER TABLE acl_sync ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE acl_sync ALTER COLUMN CHANGE_TIME SET NOT NULL;


CREATE TABLE article (
	id bigint NOT NULL,
	ticket_id bigint NOT NULL,
	article_type_id smallint NOT NULL,
	article_sender_type_id smallint NOT NULL,
	a_from varchar(3800),
	a_reply_to varchar(500),
	a_to varchar(3800),
	a_cc varchar(3800),
	a_subject varchar(3800),
	a_message_id varchar(3800),
	a_message_id_md5 varchar(32),
	a_in_reply_to varchar(3800),
	a_references varchar(3800),
	a_content_type varchar(250),
	a_body text NOT NULL,
	incoming_time integer NOT NULL,
	content_path varchar(250),
	valid_id smallint NOT NULL,
	create_time timestamp NOT NULL,
	create_by integer NOT NULL,
	change_time timestamp NOT NULL,
	change_by integer NOT NULL
) ;
ALTER  TABLE article OWNER TO otrs;
CREATE INDEX article_article_sender_type_id ON article (article_sender_type_id);
CREATE INDEX article_article_type_id ON article (article_type_id);
CREATE INDEX article_a_message_id_md5 ON article (a_message_id_md5);
CREATE INDEX article_ticket_id_article_sender_type_id_id ON article (ticket_id, article_sender_type_id, id);
CREATE INDEX article_change_by ON article (change_by);
CREATE INDEX article_create_by ON article (create_by);
CREATE INDEX article_valid_id ON article (valid_id);
ALTER TABLE article ADD PRIMARY KEY (id);
ALTER TABLE article ALTER COLUMN ID SET NOT NULL;
ALTER TABLE article ALTER COLUMN TICKET_ID SET NOT NULL;
ALTER TABLE article ALTER COLUMN ARTICLE_TYPE_ID SET NOT NULL;
ALTER TABLE article ALTER COLUMN ARTICLE_SENDER_TYPE_ID SET NOT NULL;
ALTER TABLE article ALTER COLUMN A_BODY SET NOT NULL;
ALTER TABLE article ALTER COLUMN INCOMING_TIME SET NOT NULL;
ALTER TABLE article ALTER COLUMN VALID_ID SET NOT NULL;
ALTER TABLE article ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE article ALTER COLUMN CREATE_BY SET NOT NULL;
ALTER TABLE article ALTER COLUMN CHANGE_TIME SET NOT NULL;
ALTER TABLE article ALTER COLUMN CHANGE_BY SET NOT NULL;


CREATE TABLE article_attachment (
	id bigint NOT NULL,
	article_id bigint NOT NULL,
	filename varchar(250),
	content_size varchar(30),
	content_type varchar(450),
	content_id varchar(250),
	content_alternative varchar(50),
	disposition varchar(15),
	content text NOT NULL,
	create_time timestamp NOT NULL,
	create_by integer NOT NULL,
	change_time timestamp NOT NULL,
	change_by integer NOT NULL
) ;
ALTER  TABLE article_attachment OWNER TO otrs;
CREATE INDEX article_attachment_article_id ON article_attachment (article_id);
CREATE INDEX article_attachment_change_by ON article_attachment (change_by);
CREATE INDEX article_attachment_create_by ON article_attachment (create_by);
ALTER TABLE article_attachment ADD PRIMARY KEY (id);
ALTER TABLE article_attachment ALTER COLUMN ID SET NOT NULL;
ALTER TABLE article_attachment ALTER COLUMN ARTICLE_ID SET NOT NULL;
ALTER TABLE article_attachment ALTER COLUMN CONTENT SET NOT NULL;
ALTER TABLE article_attachment ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE article_attachment ALTER COLUMN CREATE_BY SET NOT NULL;
ALTER TABLE article_attachment ALTER COLUMN CHANGE_TIME SET NOT NULL;
ALTER TABLE article_attachment ALTER COLUMN CHANGE_BY SET NOT NULL;


CREATE TABLE article_flag (
	article_id bigint NOT NULL,
	article_key varchar(50) NOT NULL,
	article_value varchar(50),
	create_time timestamp NOT NULL,
	create_by integer NOT NULL
) ;
ALTER  TABLE article_flag OWNER TO otrs;
CREATE INDEX article_flag_article_id ON article_flag (article_id);
CREATE INDEX article_flag_article_id_create_by ON article_flag (article_id, create_by);
CREATE INDEX article_flag_create_by ON article_flag (create_by);
ALTER TABLE article_flag ALTER COLUMN ARTICLE_ID SET NOT NULL;
ALTER TABLE article_flag ALTER COLUMN ARTICLE_KEY SET NOT NULL;
ALTER TABLE article_flag ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE article_flag ALTER COLUMN CREATE_BY SET NOT NULL;


CREATE TABLE article_plain (
	id bigint NOT NULL,
	article_id bigint NOT NULL,
	body text NOT NULL,
	create_time timestamp NOT NULL,
	create_by integer NOT NULL,
	change_time timestamp NOT NULL,
	change_by integer NOT NULL
) ;
ALTER  TABLE article_plain OWNER TO otrs;
CREATE INDEX article_plain_article_id ON article_plain (article_id);
CREATE INDEX article_plain_change_by ON article_plain (change_by);
CREATE INDEX article_plain_create_by ON article_plain (create_by);
ALTER TABLE article_plain ADD PRIMARY KEY (id);
ALTER TABLE article_plain ALTER COLUMN ID SET NOT NULL;
ALTER TABLE article_plain ALTER COLUMN ARTICLE_ID SET NOT NULL;
ALTER TABLE article_plain ALTER COLUMN BODY SET NOT NULL;
ALTER TABLE article_plain ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE article_plain ALTER COLUMN CREATE_BY SET NOT NULL;
ALTER TABLE article_plain ALTER COLUMN CHANGE_TIME SET NOT NULL;
ALTER TABLE article_plain ALTER COLUMN CHANGE_BY SET NOT NULL;


CREATE TABLE article_search (
	id bigint NOT NULL,
	ticket_id bigint NOT NULL,
	article_type_id smallint NOT NULL,
	article_sender_type_id smallint NOT NULL,
	a_from varchar(3800),
	a_to varchar(3800),
	a_cc varchar(3800),
	a_subject varchar(3800),
	a_body text NOT NULL,
	incoming_time integer NOT NULL
) ;
ALTER  TABLE article_search OWNER TO otrs;
CREATE INDEX article_search_article_sender_type_id ON article_search (article_sender_type_id);
CREATE INDEX article_search_article_type_id ON article_search (article_type_id);
CREATE INDEX article_search_ticket_id ON article_search (ticket_id);
ALTER TABLE article_search ADD PRIMARY KEY (id);
ALTER TABLE article_search ALTER COLUMN ID SET NOT NULL;
ALTER TABLE article_search ALTER COLUMN TICKET_ID SET NOT NULL;
ALTER TABLE article_search ALTER COLUMN ARTICLE_TYPE_ID SET NOT NULL;
ALTER TABLE article_search ALTER COLUMN ARTICLE_SENDER_TYPE_ID SET NOT NULL;
ALTER TABLE article_search ALTER COLUMN A_BODY SET NOT NULL;
ALTER TABLE article_search ALTER COLUMN INCOMING_TIME SET NOT NULL;


CREATE TABLE article_sender_type (
	id smallint NOT NULL,
	name varchar(200) NOT NULL,
	comments varchar(250),
	valid_id smallint NOT NULL,
	create_time timestamp NOT NULL,
	create_by integer NOT NULL,
	change_time timestamp NOT NULL,
	change_by integer NOT NULL
) ;
ALTER  TABLE article_sender_type OWNER TO otrs;
CREATE INDEX article_sender_type_change_by ON article_sender_type (change_by);
CREATE INDEX article_sender_type_create_by ON article_sender_type (create_by);
CREATE INDEX article_sender_type_valid_id ON article_sender_type (valid_id);
ALTER TABLE article_sender_type ADD UNIQUE (name);
ALTER TABLE article_sender_type ADD PRIMARY KEY (id);
ALTER TABLE article_sender_type ALTER COLUMN ID SET NOT NULL;
ALTER TABLE article_sender_type ALTER COLUMN NAME SET NOT NULL;
ALTER TABLE article_sender_type ALTER COLUMN VALID_ID SET NOT NULL;
ALTER TABLE article_sender_type ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE article_sender_type ALTER COLUMN CREATE_BY SET NOT NULL;
ALTER TABLE article_sender_type ALTER COLUMN CHANGE_TIME SET NOT NULL;
ALTER TABLE article_sender_type ALTER COLUMN CHANGE_BY SET NOT NULL;


CREATE TABLE article_type (
	id smallint NOT NULL,
	name varchar(200) NOT NULL,
	comments varchar(250),
	valid_id smallint NOT NULL,
	create_time timestamp NOT NULL,
	create_by integer NOT NULL,
	change_time timestamp NOT NULL,
	change_by integer NOT NULL
) ;
ALTER  TABLE article_type OWNER TO otrs;
CREATE INDEX article_type_change_by ON article_type (change_by);
CREATE INDEX article_type_create_by ON article_type (create_by);
CREATE INDEX article_type_valid_id ON article_type (valid_id);
ALTER TABLE article_type ADD UNIQUE (name);
ALTER TABLE article_type ADD PRIMARY KEY (id);
ALTER TABLE article_type ALTER COLUMN ID SET NOT NULL;
ALTER TABLE article_type ALTER COLUMN NAME SET NOT NULL;
ALTER TABLE article_type ALTER COLUMN VALID_ID SET NOT NULL;
ALTER TABLE article_type ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE article_type ALTER COLUMN CREATE_BY SET NOT NULL;
ALTER TABLE article_type ALTER COLUMN CHANGE_TIME SET NOT NULL;
ALTER TABLE article_type ALTER COLUMN CHANGE_BY SET NOT NULL;


CREATE TABLE attachment_directory (
	id integer NOT NULL,
	storage_backend varchar(64) NOT NULL,
	file_name varchar(255),
	file_path varchar(4000),
	create_time timestamp NOT NULL,
	create_by integer NOT NULL,
	change_time timestamp NOT NULL,
	change_by integer NOT NULL
) ;
ALTER  TABLE attachment_directory OWNER TO otrs;
CREATE INDEX attachment_directory_storage_backend ON attachment_directory (storage_backend);
ALTER TABLE attachment_directory ADD PRIMARY KEY (id);
ALTER TABLE attachment_directory ALTER COLUMN ID SET NOT NULL;
ALTER TABLE attachment_directory ALTER COLUMN STORAGE_BACKEND SET NOT NULL;
ALTER TABLE attachment_directory ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE attachment_directory ALTER COLUMN CREATE_BY SET NOT NULL;
ALTER TABLE attachment_directory ALTER COLUMN CHANGE_TIME SET NOT NULL;
ALTER TABLE attachment_directory ALTER COLUMN CHANGE_BY SET NOT NULL;


CREATE TABLE attachment_dir_preferences (
	attachment_directory_id integer NOT NULL,
	preferences_key varchar(150) NOT NULL,
	preferences_value varchar(350)
) ;
ALTER  TABLE attachment_dir_preferences OWNER TO otrs;
CREATE INDEX attachment_dir_preferences_attachment_directory_id ON attachment_dir_preferences (attachment_directory_id);
ALTER TABLE attachment_dir_preferences ALTER COLUMN ATTACHMENT_DIRECTORY_ID SET NOT NULL;
ALTER TABLE attachment_dir_preferences ALTER COLUMN PREFERENCES_KEY SET NOT NULL;


CREATE TABLE attachment_storage (
	id integer NOT NULL,
	attachment_directory_id integer NOT NULL,
	data text
) ;
ALTER  TABLE attachment_storage OWNER TO otrs;
ALTER TABLE attachment_storage ADD UNIQUE (attachment_directory_id);
ALTER TABLE attachment_storage ADD PRIMARY KEY (id);
ALTER TABLE attachment_storage ALTER COLUMN ID SET NOT NULL;
ALTER TABLE attachment_storage ALTER COLUMN ATTACHMENT_DIRECTORY_ID SET NOT NULL;


CREATE TABLE auto_response (
	id integer NOT NULL,
	name varchar(200) NOT NULL,
	text0 text,
	text1 text,
	type_id smallint NOT NULL,
	system_address_id smallint NOT NULL,
	content_type varchar(250),
	comments varchar(250),
	valid_id smallint NOT NULL,
	create_time timestamp NOT NULL,
	create_by integer NOT NULL,
	change_time timestamp NOT NULL,
	change_by integer NOT NULL
) ;
ALTER  TABLE auto_response OWNER TO otrs;
CREATE INDEX auto_response_change_by ON auto_response (change_by);
CREATE INDEX auto_response_create_by ON auto_response (create_by);
CREATE INDEX auto_response_system_address_id ON auto_response (system_address_id);
CREATE INDEX auto_response_type_id ON auto_response (type_id);
CREATE INDEX auto_response_valid_id ON auto_response (valid_id);
ALTER TABLE auto_response ADD PRIMARY KEY (id);
ALTER TABLE auto_response ADD UNIQUE (name);
ALTER TABLE auto_response ALTER COLUMN ID SET NOT NULL;
ALTER TABLE auto_response ALTER COLUMN NAME SET NOT NULL;
ALTER TABLE auto_response ALTER COLUMN TYPE_ID SET NOT NULL;
ALTER TABLE auto_response ALTER COLUMN SYSTEM_ADDRESS_ID SET NOT NULL;
ALTER TABLE auto_response ALTER COLUMN VALID_ID SET NOT NULL;
ALTER TABLE auto_response ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE auto_response ALTER COLUMN CREATE_BY SET NOT NULL;
ALTER TABLE auto_response ALTER COLUMN CHANGE_TIME SET NOT NULL;
ALTER TABLE auto_response ALTER COLUMN CHANGE_BY SET NOT NULL;


CREATE TABLE auto_response_type (
	id smallint NOT NULL,
	name varchar(200) NOT NULL,
	comments varchar(250),
	valid_id smallint NOT NULL,
	create_time timestamp NOT NULL,
	create_by integer NOT NULL,
	change_time timestamp NOT NULL,
	change_by integer NOT NULL
) ;
ALTER  TABLE auto_response_type OWNER TO otrs;
CREATE INDEX auto_response_type_change_by ON auto_response_type (change_by);
CREATE INDEX auto_response_type_create_by ON auto_response_type (create_by);
CREATE INDEX auto_response_type_valid_id ON auto_response_type (valid_id);
ALTER TABLE auto_response_type ADD PRIMARY KEY (id);
ALTER TABLE auto_response_type ADD UNIQUE (name);
ALTER TABLE auto_response_type ALTER COLUMN ID SET NOT NULL;
ALTER TABLE auto_response_type ALTER COLUMN NAME SET NOT NULL;
ALTER TABLE auto_response_type ALTER COLUMN VALID_ID SET NOT NULL;
ALTER TABLE auto_response_type ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE auto_response_type ALTER COLUMN CREATE_BY SET NOT NULL;
ALTER TABLE auto_response_type ALTER COLUMN CHANGE_TIME SET NOT NULL;
ALTER TABLE auto_response_type ALTER COLUMN CHANGE_BY SET NOT NULL;


CREATE TABLE change_cab (
	id bigint NOT NULL,
	change_id bigint NOT NULL,
	user_id integer,
	customer_user_id varchar(250)
) ;
ALTER  TABLE change_cab OWNER TO otrs;
CREATE INDEX change_cab_change_id ON change_cab (change_id);
CREATE INDEX change_cab_user_id ON change_cab (user_id);
ALTER TABLE change_cab ADD UNIQUE (change_id,user_id,customer_user_id);
ALTER TABLE change_cab ADD PRIMARY KEY (id);
ALTER TABLE change_cab ALTER COLUMN ID SET NOT NULL;
ALTER TABLE change_cab ALTER COLUMN CHANGE_ID SET NOT NULL;


CREATE TABLE change_cip_allocate (
	id bigint NOT NULL,
	category_id integer NOT NULL,
	impact_id integer NOT NULL,
	priority_id integer NOT NULL,
	create_time timestamp,
	create_by integer,
	change_time timestamp,
	change_by integer
) ;
ALTER  TABLE change_cip_allocate OWNER TO otrs;
CREATE INDEX change_cip_allocate_category_id ON change_cip_allocate (category_id);
CREATE INDEX change_cip_allocate_change_by ON change_cip_allocate (change_by);
CREATE INDEX change_cip_allocate_create_by ON change_cip_allocate (create_by);
CREATE INDEX change_cip_allocate_impact_id ON change_cip_allocate (impact_id);
CREATE INDEX change_cip_allocate_priority_id ON change_cip_allocate (priority_id);
ALTER TABLE change_cip_allocate ADD PRIMARY KEY (id);
ALTER TABLE change_cip_allocate ALTER COLUMN ID SET NOT NULL;
ALTER TABLE change_cip_allocate ALTER COLUMN CATEGORY_ID SET NOT NULL;
ALTER TABLE change_cip_allocate ALTER COLUMN IMPACT_ID SET NOT NULL;
ALTER TABLE change_cip_allocate ALTER COLUMN PRIORITY_ID SET NOT NULL;


CREATE TABLE change_condition (
	id bigint NOT NULL,
	change_id bigint NOT NULL,
	name varchar(250) NOT NULL,
	expression_conjunction varchar(250) NOT NULL,
	comments varchar(250),
	valid_id smallint NOT NULL,
	create_time timestamp NOT NULL,
	create_by integer NOT NULL,
	change_time timestamp NOT NULL,
	change_by integer NOT NULL
) ;
ALTER  TABLE change_condition OWNER TO otrs;
CREATE INDEX change_condition_change_id ON change_condition (change_id);
CREATE INDEX change_condition_valid_id ON change_condition (valid_id);
CREATE INDEX change_condition_change_by ON change_condition (change_by);
CREATE INDEX change_condition_create_by ON change_condition (create_by);
ALTER TABLE change_condition ADD PRIMARY KEY (id);
ALTER TABLE change_condition ADD UNIQUE (change_id,name);
ALTER TABLE change_condition ALTER COLUMN ID SET NOT NULL;
ALTER TABLE change_condition ALTER COLUMN CHANGE_ID SET NOT NULL;
ALTER TABLE change_condition ALTER COLUMN NAME SET NOT NULL;
ALTER TABLE change_condition ALTER COLUMN EXPRESSION_CONJUNCTION SET NOT NULL;
ALTER TABLE change_condition ALTER COLUMN VALID_ID SET NOT NULL;
ALTER TABLE change_condition ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE change_condition ALTER COLUMN CREATE_BY SET NOT NULL;
ALTER TABLE change_condition ALTER COLUMN CHANGE_TIME SET NOT NULL;
ALTER TABLE change_condition ALTER COLUMN CHANGE_BY SET NOT NULL;


CREATE TABLE change_history (
	id bigint NOT NULL,
	change_id bigint NOT NULL,
	workorder_id bigint,
	type_id integer NOT NULL,
	content_new text,
	content_old text,
	fieldname varchar(250),
	create_time timestamp NOT NULL,
	create_by integer NOT NULL
) ;
ALTER  TABLE change_history OWNER TO otrs;
CREATE INDEX change_history_change_id ON change_history (change_id);
CREATE INDEX change_history_create_time ON change_history (create_time);
CREATE INDEX change_history_type_id ON change_history (type_id);
CREATE INDEX change_history_workorder_id ON change_history (workorder_id);
CREATE INDEX change_history_create_by ON change_history (create_by);
ALTER TABLE change_history ADD PRIMARY KEY (id);
ALTER TABLE change_history ALTER COLUMN ID SET NOT NULL;
ALTER TABLE change_history ALTER COLUMN CHANGE_ID SET NOT NULL;
ALTER TABLE change_history ALTER COLUMN TYPE_ID SET NOT NULL;
ALTER TABLE change_history ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE change_history ALTER COLUMN CREATE_BY SET NOT NULL;


CREATE TABLE change_history_type (
	id integer NOT NULL,
	name varchar(100) NOT NULL,
	comments varchar(250),
	valid_id smallint NOT NULL,
	create_time timestamp NOT NULL,
	create_by integer NOT NULL,
	change_time timestamp NOT NULL,
	change_by integer NOT NULL
) ;
ALTER  TABLE change_history_type OWNER TO otrs;
CREATE INDEX change_history_type_valid_id ON change_history_type (valid_id);
CREATE INDEX change_history_type_change_by ON change_history_type (change_by);
CREATE INDEX change_history_type_create_by ON change_history_type (create_by);
ALTER TABLE change_history_type ADD PRIMARY KEY (id);
ALTER TABLE change_history_type ADD UNIQUE (name);
ALTER TABLE change_history_type ALTER COLUMN ID SET NOT NULL;
ALTER TABLE change_history_type ALTER COLUMN NAME SET NOT NULL;
ALTER TABLE change_history_type ALTER COLUMN VALID_ID SET NOT NULL;
ALTER TABLE change_history_type ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE change_history_type ALTER COLUMN CREATE_BY SET NOT NULL;
ALTER TABLE change_history_type ALTER COLUMN CHANGE_TIME SET NOT NULL;
ALTER TABLE change_history_type ALTER COLUMN CHANGE_BY SET NOT NULL;


CREATE TABLE change_item (
	id bigint NOT NULL,
	change_number varchar(100) NOT NULL,
	title varchar(250),
	description text,
	description_plain text,
	justification text,
	justification_plain text,
	change_state_id integer NOT NULL,
	change_manager_id integer,
	change_builder_id integer NOT NULL,
	category_id integer NOT NULL,
	impact_id integer NOT NULL,
	priority_id integer NOT NULL,
	requested_time timestamp,
	create_time timestamp NOT NULL,
	create_by integer NOT NULL,
	change_time timestamp NOT NULL,
	change_by integer NOT NULL
) ;
ALTER  TABLE change_item OWNER TO otrs;
CREATE INDEX change_item_category_id ON change_item (category_id);
CREATE INDEX change_item_change_builder_id ON change_item (change_builder_id);
CREATE INDEX change_item_change_manager_id ON change_item (change_manager_id);
CREATE INDEX change_item_change_state_id ON change_item (change_state_id);
CREATE INDEX change_item_change_time ON change_item (change_time);
CREATE INDEX change_item_create_time ON change_item (create_time);
CREATE INDEX change_item_impact_id ON change_item (impact_id);
CREATE INDEX change_item_priority_id ON change_item (priority_id);
CREATE INDEX change_item_requested_time ON change_item (requested_time);
CREATE INDEX change_item_title ON change_item (title);
CREATE INDEX change_item_change_by ON change_item (change_by);
CREATE INDEX change_item_create_by ON change_item (create_by);
ALTER TABLE change_item ADD UNIQUE (change_number);
ALTER TABLE change_item ADD PRIMARY KEY (id);
ALTER TABLE change_item ALTER COLUMN ID SET NOT NULL;
ALTER TABLE change_item ALTER COLUMN CHANGE_NUMBER SET NOT NULL;
ALTER TABLE change_item ALTER COLUMN CHANGE_STATE_ID SET NOT NULL;
ALTER TABLE change_item ALTER COLUMN CHANGE_BUILDER_ID SET NOT NULL;
ALTER TABLE change_item ALTER COLUMN CATEGORY_ID SET NOT NULL;
ALTER TABLE change_item ALTER COLUMN IMPACT_ID SET NOT NULL;
ALTER TABLE change_item ALTER COLUMN PRIORITY_ID SET NOT NULL;
ALTER TABLE change_item ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE change_item ALTER COLUMN CREATE_BY SET NOT NULL;
ALTER TABLE change_item ALTER COLUMN CHANGE_TIME SET NOT NULL;
ALTER TABLE change_item ALTER COLUMN CHANGE_BY SET NOT NULL;


CREATE TABLE change_notification (
	id bigint NOT NULL,
	name varchar(250) NOT NULL,
	item_attribute varchar(250),
	event_id integer NOT NULL,
	valid_id smallint NOT NULL,
	comments varchar(250),
	notification_rule varchar(250)
) ;
ALTER  TABLE change_notification OWNER TO otrs;
CREATE INDEX change_notification_event_id ON change_notification (event_id);
CREATE INDEX change_notification_event_id_valid_id ON change_notification (event_id, valid_id);
CREATE INDEX change_notification_valid_id ON change_notification (valid_id);
ALTER TABLE change_notification ADD PRIMARY KEY (id);
ALTER TABLE change_notification ALTER COLUMN ID SET NOT NULL;
ALTER TABLE change_notification ALTER COLUMN NAME SET NOT NULL;
ALTER TABLE change_notification ALTER COLUMN EVENT_ID SET NOT NULL;
ALTER TABLE change_notification ALTER COLUMN VALID_ID SET NOT NULL;


CREATE TABLE change_notification_grps (
	id bigint NOT NULL,
	name varchar(250) NOT NULL
) ;
ALTER  TABLE change_notification_grps OWNER TO otrs;
ALTER TABLE change_notification_grps ADD PRIMARY KEY (id);
ALTER TABLE change_notification_grps ALTER COLUMN ID SET NOT NULL;
ALTER TABLE change_notification_grps ALTER COLUMN NAME SET NOT NULL;


CREATE TABLE change_notification_message (
	id bigint NOT NULL,
	notification_id bigint NOT NULL,
	subject varchar(200) NOT NULL,
	text varchar(4000) NOT NULL,
	content_type varchar(250) NOT NULL,
	language varchar(60) NOT NULL,
	notification_type varchar(60) NOT NULL
) ;
ALTER  TABLE change_notification_message OWNER TO otrs;
CREATE INDEX change_notification_message_notification_id ON change_notification_message (notification_id);
CREATE INDEX change_notification_message_language ON change_notification_message (language);
ALTER TABLE change_notification_message ADD UNIQUE (notification_id,language,notification_type);
ALTER TABLE change_notification_message ADD PRIMARY KEY (id);
ALTER TABLE change_notification_message ALTER COLUMN ID SET NOT NULL;
ALTER TABLE change_notification_message ALTER COLUMN NOTIFICATION_ID SET NOT NULL;
ALTER TABLE change_notification_message ALTER COLUMN SUBJECT SET NOT NULL;
ALTER TABLE change_notification_message ALTER COLUMN TEXT SET NOT NULL;
ALTER TABLE change_notification_message ALTER COLUMN CONTENT_TYPE SET NOT NULL;
ALTER TABLE change_notification_message ALTER COLUMN LANGUAGE SET NOT NULL;
ALTER TABLE change_notification_message ALTER COLUMN NOTIFICATION_TYPE SET NOT NULL;


CREATE TABLE change_notification_rec (
	id bigint NOT NULL,
	notification_id bigint NOT NULL,
	group_id bigint NOT NULL
) ;
ALTER  TABLE change_notification_rec OWNER TO otrs;
CREATE INDEX change_notification_rec_group_id_notification_id ON change_notification_rec (group_id, notification_id);
CREATE INDEX change_notification_rec_group_id ON change_notification_rec (group_id);
CREATE INDEX change_notification_rec_notification_id ON change_notification_rec (notification_id);
ALTER TABLE change_notification_rec ADD PRIMARY KEY (id);
ALTER TABLE change_notification_rec ALTER COLUMN ID SET NOT NULL;
ALTER TABLE change_notification_rec ALTER COLUMN NOTIFICATION_ID SET NOT NULL;
ALTER TABLE change_notification_rec ALTER COLUMN GROUP_ID SET NOT NULL;


CREATE TABLE change_state_machine (
	id bigint NOT NULL,
	state_id integer,
	next_state_id integer
) ;
ALTER  TABLE change_state_machine OWNER TO otrs;
ALTER TABLE change_state_machine ADD UNIQUE (state_id,next_state_id);
ALTER TABLE change_state_machine ADD PRIMARY KEY (id);
ALTER TABLE change_state_machine ALTER COLUMN ID SET NOT NULL;


CREATE TABLE change_template (
	id integer NOT NULL,
	name varchar(250) NOT NULL,
	comments varchar(250),
	content text NOT NULL,
	type_id integer NOT NULL,
	valid_id smallint NOT NULL,
	create_time timestamp NOT NULL,
	create_by integer NOT NULL,
	change_time timestamp NOT NULL,
	change_by integer NOT NULL
) ;
ALTER  TABLE change_template OWNER TO otrs;
CREATE INDEX change_template_type_id ON change_template (type_id);
CREATE INDEX change_template_valid_id ON change_template (valid_id);
ALTER TABLE change_template ADD UNIQUE (name,type_id);
ALTER TABLE change_template ADD PRIMARY KEY (id);
ALTER TABLE change_template ALTER COLUMN ID SET NOT NULL;
ALTER TABLE change_template ALTER COLUMN NAME SET NOT NULL;
ALTER TABLE change_template ALTER COLUMN CONTENT SET NOT NULL;
ALTER TABLE change_template ALTER COLUMN TYPE_ID SET NOT NULL;
ALTER TABLE change_template ALTER COLUMN VALID_ID SET NOT NULL;
ALTER TABLE change_template ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE change_template ALTER COLUMN CREATE_BY SET NOT NULL;
ALTER TABLE change_template ALTER COLUMN CHANGE_TIME SET NOT NULL;
ALTER TABLE change_template ALTER COLUMN CHANGE_BY SET NOT NULL;


CREATE TABLE change_template_type (
	id integer NOT NULL,
	name varchar(250) NOT NULL,
	valid_id smallint NOT NULL,
	create_time timestamp NOT NULL,
	create_by integer NOT NULL,
	change_time timestamp NOT NULL,
	change_by integer NOT NULL
) ;
ALTER  TABLE change_template_type OWNER TO otrs;
CREATE INDEX change_template_type_valid_id ON change_template_type (valid_id);
ALTER TABLE change_template_type ADD PRIMARY KEY (id);
ALTER TABLE change_template_type ADD UNIQUE (name);
ALTER TABLE change_template_type ALTER COLUMN ID SET NOT NULL;
ALTER TABLE change_template_type ALTER COLUMN NAME SET NOT NULL;
ALTER TABLE change_template_type ALTER COLUMN VALID_ID SET NOT NULL;
ALTER TABLE change_template_type ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE change_template_type ALTER COLUMN CREATE_BY SET NOT NULL;
ALTER TABLE change_template_type ALTER COLUMN CHANGE_TIME SET NOT NULL;
ALTER TABLE change_template_type ALTER COLUMN CHANGE_BY SET NOT NULL;


CREATE TABLE change_workorder (
	id bigint NOT NULL,
	change_id bigint NOT NULL,
	workorder_number integer NOT NULL,
	title varchar(250),
	instruction text,
	instruction_plain text,
	report text,
	report_plain text,
	workorder_state_id integer NOT NULL,
	workorder_type_id integer NOT NULL,
	workorder_agent_id integer,
	planned_start_time timestamp NOT NULL DEFAULT to_date('9999-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS'),
	planned_end_time timestamp NOT NULL DEFAULT to_date('9999-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS'),
	actual_start_time timestamp NOT NULL DEFAULT to_date('9999-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS'),
	actual_end_time timestamp NOT NULL DEFAULT to_date('9999-01-01 00:00:00','YYYY-MM-DD HH24:MI:SS'),
	planned_effort double precision,
	accounted_time double precision,
	create_time timestamp NOT NULL,
	create_by integer NOT NULL,
	change_time timestamp NOT NULL,
	change_by integer NOT NULL
) ;
ALTER  TABLE change_workorder OWNER TO otrs;
CREATE INDEX change_workorder_actual_end_time ON change_workorder (actual_end_time);
CREATE INDEX change_workorder_actual_start_time ON change_workorder (actual_start_time);
CREATE INDEX change_workorder_change_id ON change_workorder (change_id);
CREATE INDEX change_workorder_change_time ON change_workorder (change_time);
CREATE INDEX change_workorder_create_time ON change_workorder (create_time);
CREATE INDEX change_workorder_planned_end_time ON change_workorder (planned_end_time);
CREATE INDEX change_workorder_planned_start_time ON change_workorder (planned_start_time);
CREATE INDEX change_workorder_title ON change_workorder (title);
CREATE INDEX change_workorder_workorder_agent_id ON change_workorder (workorder_agent_id);
CREATE INDEX change_workorder_workorder_state_id ON change_workorder (workorder_state_id);
CREATE INDEX change_workorder_workorder_type_id ON change_workorder (workorder_type_id);
CREATE INDEX change_workorder_change_by ON change_workorder (change_by);
CREATE INDEX change_workorder_create_by ON change_workorder (create_by);
ALTER TABLE change_workorder ADD PRIMARY KEY (id);
ALTER TABLE change_workorder ALTER COLUMN ID SET NOT NULL;
ALTER TABLE change_workorder ALTER COLUMN CHANGE_ID SET NOT NULL;
ALTER TABLE change_workorder ALTER COLUMN WORKORDER_NUMBER SET NOT NULL;
ALTER TABLE change_workorder ALTER COLUMN WORKORDER_STATE_ID SET NOT NULL;
ALTER TABLE change_workorder ALTER COLUMN WORKORDER_TYPE_ID SET NOT NULL;
ALTER TABLE change_workorder ALTER COLUMN PLANNED_START_TIME SET NOT NULL;
ALTER TABLE change_workorder ALTER COLUMN PLANNED_END_TIME SET NOT NULL;
ALTER TABLE change_workorder ALTER COLUMN ACTUAL_START_TIME SET NOT NULL;
ALTER TABLE change_workorder ALTER COLUMN ACTUAL_END_TIME SET NOT NULL;
ALTER TABLE change_workorder ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE change_workorder ALTER COLUMN CREATE_BY SET NOT NULL;
ALTER TABLE change_workorder ALTER COLUMN CHANGE_TIME SET NOT NULL;
ALTER TABLE change_workorder ALTER COLUMN CHANGE_BY SET NOT NULL;


CREATE TABLE cip_allocate (
	id bigint NOT NULL,
	criticality varchar(200) NOT NULL,
	impact varchar(200) NOT NULL,
	priority_id smallint NOT NULL,
	create_time timestamp,
	create_by integer,
	change_time timestamp,
	change_by integer
) ;
ALTER  TABLE cip_allocate OWNER TO otrs;
CREATE INDEX cip_allocate_change_by ON cip_allocate (change_by);
CREATE INDEX cip_allocate_create_by ON cip_allocate (create_by);
CREATE INDEX cip_allocate_priority_id ON cip_allocate (priority_id);
ALTER TABLE cip_allocate ADD PRIMARY KEY (id);
ALTER TABLE cip_allocate ALTER COLUMN ID SET NOT NULL;
ALTER TABLE cip_allocate ALTER COLUMN CRITICALITY SET NOT NULL;
ALTER TABLE cip_allocate ALTER COLUMN IMPACT SET NOT NULL;
ALTER TABLE cip_allocate ALTER COLUMN PRIORITY_ID SET NOT NULL;


CREATE TABLE cloud_service_config (
	id integer NOT NULL,
	name varchar(200) NOT NULL,
	config text NOT NULL,
	config_md5 varchar(32) NOT NULL,
	valid_id smallint NOT NULL,
	create_time timestamp NOT NULL,
	create_by integer NOT NULL,
	change_time timestamp NOT NULL,
	change_by integer NOT NULL
) ;
ALTER  TABLE cloud_service_config OWNER TO otrs;
CREATE INDEX cloud_service_config_change_by ON cloud_service_config (change_by);
CREATE INDEX cloud_service_config_create_by ON cloud_service_config (create_by);
CREATE INDEX cloud_service_config_valid_id ON cloud_service_config (valid_id);
ALTER TABLE cloud_service_config ADD UNIQUE (config_md5);
ALTER TABLE cloud_service_config ADD PRIMARY KEY (id);
ALTER TABLE cloud_service_config ADD UNIQUE (name);
ALTER TABLE cloud_service_config ALTER COLUMN ID SET NOT NULL;
ALTER TABLE cloud_service_config ALTER COLUMN NAME SET NOT NULL;
ALTER TABLE cloud_service_config ALTER COLUMN CONFIG SET NOT NULL;
ALTER TABLE cloud_service_config ALTER COLUMN CONFIG_MD5 SET NOT NULL;
ALTER TABLE cloud_service_config ALTER COLUMN VALID_ID SET NOT NULL;
ALTER TABLE cloud_service_config ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE cloud_service_config ALTER COLUMN CREATE_BY SET NOT NULL;
ALTER TABLE cloud_service_config ALTER COLUMN CHANGE_TIME SET NOT NULL;
ALTER TABLE cloud_service_config ALTER COLUMN CHANGE_BY SET NOT NULL;


CREATE TABLE condition_action (
	id bigint NOT NULL,
	condition_id bigint NOT NULL,
	action_number integer NOT NULL,
	object_id smallint NOT NULL,
	attribute_id smallint NOT NULL,
	operator_id smallint NOT NULL,
	selector varchar(20),
	action_value varchar(250)
) ;
ALTER  TABLE condition_action OWNER TO otrs;
CREATE INDEX condition_action_action_number ON condition_action (action_number);
CREATE INDEX condition_action_action_value ON condition_action (action_value);
CREATE INDEX condition_action_attribute_id ON condition_action (attribute_id);
CREATE INDEX condition_action_condition_id ON condition_action (condition_id);
CREATE INDEX condition_action_object_id ON condition_action (object_id);
CREATE INDEX condition_action_operator_id ON condition_action (operator_id);
CREATE INDEX condition_action_selector ON condition_action (selector);
ALTER TABLE condition_action ADD UNIQUE (condition_id,action_number);
ALTER TABLE condition_action ADD UNIQUE (condition_id,object_id,attribute_id,operator_id,selector,action_value);
ALTER TABLE condition_action ADD PRIMARY KEY (id);
ALTER TABLE condition_action ALTER COLUMN ID SET NOT NULL;
ALTER TABLE condition_action ALTER COLUMN CONDITION_ID SET NOT NULL;
ALTER TABLE condition_action ALTER COLUMN ACTION_NUMBER SET NOT NULL;
ALTER TABLE condition_action ALTER COLUMN OBJECT_ID SET NOT NULL;
ALTER TABLE condition_action ALTER COLUMN ATTRIBUTE_ID SET NOT NULL;
ALTER TABLE condition_action ALTER COLUMN OPERATOR_ID SET NOT NULL;


CREATE TABLE condition_attribute (
	id smallint NOT NULL,
	name varchar(250) NOT NULL
) ;
ALTER  TABLE condition_attribute OWNER TO otrs;
ALTER TABLE condition_attribute ADD UNIQUE (name);
ALTER TABLE condition_attribute ADD PRIMARY KEY (id);
ALTER TABLE condition_attribute ALTER COLUMN ID SET NOT NULL;
ALTER TABLE condition_attribute ALTER COLUMN NAME SET NOT NULL;


CREATE TABLE condition_expression (
	id bigint NOT NULL,
	condition_id bigint NOT NULL,
	object_id smallint NOT NULL,
	attribute_id smallint NOT NULL,
	operator_id smallint NOT NULL,
	selector varchar(20),
	compare_value varchar(250)
) ;
ALTER  TABLE condition_expression OWNER TO otrs;
CREATE INDEX condition_expression_attribute_id ON condition_expression (attribute_id);
CREATE INDEX condition_expression_compare_value ON condition_expression (compare_value);
CREATE INDEX condition_expression_condition_id ON condition_expression (condition_id);
CREATE INDEX condition_expression_object_id ON condition_expression (object_id);
CREATE INDEX condition_expression_operator_id ON condition_expression (operator_id);
CREATE INDEX condition_expression_selector ON condition_expression (selector);
ALTER TABLE condition_expression ADD UNIQUE (condition_id,object_id,attribute_id,operator_id,selector,compare_value);
ALTER TABLE condition_expression ADD PRIMARY KEY (id);
ALTER TABLE condition_expression ALTER COLUMN ID SET NOT NULL;
ALTER TABLE condition_expression ALTER COLUMN CONDITION_ID SET NOT NULL;
ALTER TABLE condition_expression ALTER COLUMN OBJECT_ID SET NOT NULL;
ALTER TABLE condition_expression ALTER COLUMN ATTRIBUTE_ID SET NOT NULL;
ALTER TABLE condition_expression ALTER COLUMN OPERATOR_ID SET NOT NULL;


CREATE TABLE condition_object (
	id smallint NOT NULL,
	name varchar(250) NOT NULL
) ;
ALTER  TABLE condition_object OWNER TO otrs;
ALTER TABLE condition_object ADD UNIQUE (name);
ALTER TABLE condition_object ADD PRIMARY KEY (id);
ALTER TABLE condition_object ALTER COLUMN ID SET NOT NULL;
ALTER TABLE condition_object ALTER COLUMN NAME SET NOT NULL;


CREATE TABLE condition_operator (
	id smallint NOT NULL,
	name varchar(250) NOT NULL
) ;
ALTER  TABLE condition_operator OWNER TO otrs;
ALTER TABLE condition_operator ADD UNIQUE (name);
ALTER TABLE condition_operator ADD PRIMARY KEY (id);
ALTER TABLE condition_operator ALTER COLUMN ID SET NOT NULL;
ALTER TABLE condition_operator ALTER COLUMN NAME SET NOT NULL;


CREATE TABLE configitem (
	id bigint NOT NULL,
	configitem_number varchar(100) NOT NULL,
	class_id integer NOT NULL,
	last_version_id bigint,
	cur_depl_state_id integer,
	cur_inci_state_id integer,
	create_time timestamp NOT NULL,
	create_by integer NOT NULL,
	change_time timestamp NOT NULL,
	change_by integer NOT NULL
) ;
ALTER  TABLE configitem OWNER TO otrs;
CREATE INDEX configitem_class_id ON configitem (class_id);
CREATE INDEX configitem_cur_depl_state_id ON configitem (cur_depl_state_id);
CREATE INDEX configitem_cur_inci_state_id ON configitem (cur_inci_state_id);
CREATE INDEX configitem_last_version_id ON configitem (last_version_id);
CREATE INDEX configitem_change_by ON configitem (change_by);
CREATE INDEX configitem_create_by ON configitem (create_by);
ALTER TABLE configitem ADD UNIQUE (configitem_number);
ALTER TABLE configitem ADD PRIMARY KEY (id);
ALTER TABLE configitem ALTER COLUMN ID SET NOT NULL;
ALTER TABLE configitem ALTER COLUMN CONFIGITEM_NUMBER SET NOT NULL;
ALTER TABLE configitem ALTER COLUMN CLASS_ID SET NOT NULL;
ALTER TABLE configitem ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE configitem ALTER COLUMN CREATE_BY SET NOT NULL;
ALTER TABLE configitem ALTER COLUMN CHANGE_TIME SET NOT NULL;
ALTER TABLE configitem ALTER COLUMN CHANGE_BY SET NOT NULL;


CREATE TABLE configitem_counter (
	class_id integer NOT NULL,
	counter_type varchar(50) NOT NULL,
	counter varchar(50) NOT NULL
) ;
ALTER  TABLE configitem_counter OWNER TO otrs;
ALTER TABLE configitem_counter ADD PRIMARY KEY (class_id);
ALTER TABLE configitem_counter ALTER COLUMN CLASS_ID SET NOT NULL;
ALTER TABLE configitem_counter ALTER COLUMN COUNTER_TYPE SET NOT NULL;
ALTER TABLE configitem_counter ALTER COLUMN COUNTER SET NOT NULL;


CREATE TABLE configitem_definition (
	id integer NOT NULL,
	class_id integer NOT NULL,
	configitem_definition text NOT NULL,
	version integer NOT NULL,
	create_time timestamp NOT NULL,
	create_by integer NOT NULL
) ;
ALTER  TABLE configitem_definition OWNER TO otrs;
CREATE INDEX configitem_definition_class_id ON configitem_definition (class_id);
CREATE INDEX configitem_definition_create_by ON configitem_definition (create_by);
ALTER TABLE configitem_definition ADD PRIMARY KEY (id);
ALTER TABLE configitem_definition ALTER COLUMN ID SET NOT NULL;
ALTER TABLE configitem_definition ALTER COLUMN CLASS_ID SET NOT NULL;
ALTER TABLE configitem_definition ALTER COLUMN CONFIGITEM_DEFINITION SET NOT NULL;
ALTER TABLE configitem_definition ALTER COLUMN VERSION SET NOT NULL;
ALTER TABLE configitem_definition ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE configitem_definition ALTER COLUMN CREATE_BY SET NOT NULL;


CREATE TABLE configitem_history (
	id bigint NOT NULL,
	configitem_id bigint NOT NULL,
	type_id integer NOT NULL,
	content varchar(255) NOT NULL,
	create_time timestamp NOT NULL,
	create_by integer NOT NULL
) ;
ALTER  TABLE configitem_history OWNER TO otrs;
CREATE INDEX configitem_history_configitem_id ON configitem_history (configitem_id);
CREATE INDEX configitem_history_create_by ON configitem_history (create_by);
CREATE INDEX configitem_history_type_id ON configitem_history (type_id);
ALTER TABLE configitem_history ADD PRIMARY KEY (id);
ALTER TABLE configitem_history ALTER COLUMN ID SET NOT NULL;
ALTER TABLE configitem_history ALTER COLUMN CONFIGITEM_ID SET NOT NULL;
ALTER TABLE configitem_history ALTER COLUMN TYPE_ID SET NOT NULL;
ALTER TABLE configitem_history ALTER COLUMN CONTENT SET NOT NULL;
ALTER TABLE configitem_history ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE configitem_history ALTER COLUMN CREATE_BY SET NOT NULL;


CREATE TABLE configitem_history_type (
	id integer NOT NULL,
	name varchar(255) NOT NULL,
	comments varchar(255),
	valid_id smallint NOT NULL,
	create_time timestamp NOT NULL,
	create_by integer NOT NULL,
	change_time timestamp,
	change_by integer
) ;
ALTER  TABLE configitem_history_type OWNER TO otrs;
CREATE INDEX configitem_history_type_change_by ON configitem_history_type (change_by);
CREATE INDEX configitem_history_type_create_by ON configitem_history_type (create_by);
CREATE INDEX configitem_history_type_valid_id ON configitem_history_type (valid_id);
ALTER TABLE configitem_history_type ADD PRIMARY KEY (id);
ALTER TABLE configitem_history_type ADD UNIQUE (name);
ALTER TABLE configitem_history_type ALTER COLUMN ID SET NOT NULL;
ALTER TABLE configitem_history_type ALTER COLUMN NAME SET NOT NULL;
ALTER TABLE configitem_history_type ALTER COLUMN VALID_ID SET NOT NULL;
ALTER TABLE configitem_history_type ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE configitem_history_type ALTER COLUMN CREATE_BY SET NOT NULL;


CREATE TABLE configitem_version (
	id bigint NOT NULL,
	configitem_id bigint NOT NULL,
	name varchar(250) NOT NULL,
	definition_id integer NOT NULL,
	depl_state_id integer NOT NULL,
	inci_state_id integer,
	create_time timestamp NOT NULL,
	create_by integer NOT NULL
) ;
ALTER  TABLE configitem_version OWNER TO otrs;
CREATE INDEX configitem_version_configitem_id ON configitem_version (configitem_id);
CREATE INDEX configitem_version_depl_state_id ON configitem_version (depl_state_id);
CREATE INDEX configitem_version_inci_state_id ON configitem_version (inci_state_id);
CREATE INDEX configitem_version_create_by ON configitem_version (create_by);
CREATE INDEX configitem_version_definition_id ON configitem_version (definition_id);
CREATE INDEX configitem_version_name ON configitem_version (name);
ALTER TABLE configitem_version ADD PRIMARY KEY (id);
ALTER TABLE configitem_version ALTER COLUMN ID SET NOT NULL;
ALTER TABLE configitem_version ALTER COLUMN CONFIGITEM_ID SET NOT NULL;
ALTER TABLE configitem_version ALTER COLUMN NAME SET NOT NULL;
ALTER TABLE configitem_version ALTER COLUMN DEFINITION_ID SET NOT NULL;
ALTER TABLE configitem_version ALTER COLUMN DEPL_STATE_ID SET NOT NULL;
ALTER TABLE configitem_version ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE configitem_version ALTER COLUMN CREATE_BY SET NOT NULL;


CREATE TABLE customer_company (
	customer_id varchar(150) NOT NULL,
	name varchar(200) NOT NULL,
	street varchar(200),
	zip varchar(200),
	city varchar(200),
	country varchar(200),
	url varchar(200),
	comments varchar(250),
	valid_id smallint NOT NULL,
	create_time timestamp NOT NULL,
	create_by integer NOT NULL,
	change_time timestamp NOT NULL,
	change_by integer NOT NULL
) ;
ALTER  TABLE customer_company OWNER TO otrs;
ALTER TABLE customer_company ADD UNIQUE (name);
ALTER TABLE customer_company ADD PRIMARY KEY (customer_id);
ALTER TABLE customer_company ALTER COLUMN CUSTOMER_ID SET NOT NULL;
ALTER TABLE customer_company ALTER COLUMN NAME SET NOT NULL;
ALTER TABLE customer_company ALTER COLUMN VALID_ID SET NOT NULL;
ALTER TABLE customer_company ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE customer_company ALTER COLUMN CREATE_BY SET NOT NULL;
ALTER TABLE customer_company ALTER COLUMN CHANGE_TIME SET NOT NULL;
ALTER TABLE customer_company ALTER COLUMN CHANGE_BY SET NOT NULL;


CREATE TABLE customer_preferences (
	user_id varchar(250) NOT NULL,
	preferences_key varchar(150) NOT NULL,
	preferences_value varchar(250)
) ;
ALTER  TABLE customer_preferences OWNER TO otrs;
CREATE INDEX customer_preferences_user_id ON customer_preferences (user_id);
ALTER TABLE customer_preferences ALTER COLUMN USER_ID SET NOT NULL;
ALTER TABLE customer_preferences ALTER COLUMN PREFERENCES_KEY SET NOT NULL;


CREATE TABLE customer_user (
	id integer NOT NULL,
	login varchar(200) NOT NULL,
	email varchar(150) NOT NULL,
	customer_id varchar(150) NOT NULL,
	pw varchar(64),
	title varchar(50),
	first_name varchar(100) NOT NULL,
	last_name varchar(100) NOT NULL,
	phone varchar(150),
	fax varchar(150),
	mobile varchar(150),
	street varchar(150),
	zip varchar(200),
	city varchar(200),
	country varchar(200),
	comments varchar(250),
	valid_id smallint NOT NULL,
	create_time timestamp NOT NULL,
	create_by integer NOT NULL,
	change_time timestamp NOT NULL,
	change_by integer NOT NULL
) ;
ALTER  TABLE customer_user OWNER TO otrs;
CREATE INDEX customer_user_change_by ON customer_user (change_by);
CREATE INDEX customer_user_create_by ON customer_user (create_by);
CREATE INDEX customer_user_valid_id ON customer_user (valid_id);
ALTER TABLE customer_user ADD UNIQUE (login);
ALTER TABLE customer_user ADD PRIMARY KEY (id);
ALTER TABLE customer_user ALTER COLUMN ID SET NOT NULL;
ALTER TABLE customer_user ALTER COLUMN LOGIN SET NOT NULL;
ALTER TABLE customer_user ALTER COLUMN EMAIL SET NOT NULL;
ALTER TABLE customer_user ALTER COLUMN CUSTOMER_ID SET NOT NULL;
ALTER TABLE customer_user ALTER COLUMN FIRST_NAME SET NOT NULL;
ALTER TABLE customer_user ALTER COLUMN LAST_NAME SET NOT NULL;
ALTER TABLE customer_user ALTER COLUMN VALID_ID SET NOT NULL;
ALTER TABLE customer_user ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE customer_user ALTER COLUMN CREATE_BY SET NOT NULL;
ALTER TABLE customer_user ALTER COLUMN CHANGE_TIME SET NOT NULL;
ALTER TABLE customer_user ALTER COLUMN CHANGE_BY SET NOT NULL;


CREATE TABLE dynamic_field (
	id integer NOT NULL,
	internal_field smallint NOT NULL DEFAULT 0,
	name varchar(200) NOT NULL,
	label varchar(200) NOT NULL,
	field_order integer NOT NULL,
	field_type varchar(200) NOT NULL,
	object_type varchar(200) NOT NULL,
	config text,
	valid_id smallint NOT NULL,
	create_time timestamp NOT NULL,
	create_by integer NOT NULL,
	change_time timestamp NOT NULL,
	change_by integer NOT NULL
) ;
ALTER  TABLE dynamic_field OWNER TO otrs;
CREATE INDEX dynamic_field_change_by ON dynamic_field (change_by);
CREATE INDEX dynamic_field_create_by ON dynamic_field (create_by);
CREATE INDEX dynamic_field_valid_id ON dynamic_field (valid_id);
ALTER TABLE dynamic_field ADD PRIMARY KEY (id);
ALTER TABLE dynamic_field ADD UNIQUE (name);
ALTER TABLE dynamic_field ALTER COLUMN ID SET NOT NULL;
ALTER TABLE dynamic_field ALTER COLUMN INTERNAL_FIELD SET NOT NULL;
ALTER TABLE dynamic_field ALTER COLUMN NAME SET NOT NULL;
ALTER TABLE dynamic_field ALTER COLUMN LABEL SET NOT NULL;
ALTER TABLE dynamic_field ALTER COLUMN FIELD_ORDER SET NOT NULL;
ALTER TABLE dynamic_field ALTER COLUMN FIELD_TYPE SET NOT NULL;
ALTER TABLE dynamic_field ALTER COLUMN OBJECT_TYPE SET NOT NULL;
ALTER TABLE dynamic_field ALTER COLUMN VALID_ID SET NOT NULL;
ALTER TABLE dynamic_field ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE dynamic_field ALTER COLUMN CREATE_BY SET NOT NULL;
ALTER TABLE dynamic_field ALTER COLUMN CHANGE_TIME SET NOT NULL;
ALTER TABLE dynamic_field ALTER COLUMN CHANGE_BY SET NOT NULL;


CREATE TABLE dynamic_field_value (
	id integer NOT NULL,
	field_id integer NOT NULL,
	object_id bigint NOT NULL,
	value_text varchar(3800),
	value_date timestamp,
	value_int bigint
) ;
ALTER  TABLE dynamic_field_value OWNER TO otrs;
CREATE INDEX dynamic_field_value_object_id_field_id ON dynamic_field_value (object_id, field_id);
CREATE INDEX dynamic_field_value_field_id_value_date ON dynamic_field_value (field_id, value_date);
CREATE INDEX dynamic_field_value_field_id_value_int ON dynamic_field_value (field_id, value_int);
CREATE INDEX dynamic_field_value_field_id ON dynamic_field_value (field_id);
ALTER TABLE dynamic_field_value ADD PRIMARY KEY (id);
ALTER TABLE dynamic_field_value ALTER COLUMN ID SET NOT NULL;
ALTER TABLE dynamic_field_value ALTER COLUMN FIELD_ID SET NOT NULL;
ALTER TABLE dynamic_field_value ALTER COLUMN OBJECT_ID SET NOT NULL;


CREATE TABLE faq_attachment (
	id bigint NOT NULL,
	faq_id bigint NOT NULL,
	filename varchar(250),
	content_size varchar(30),
	content_type varchar(250),
	content text NOT NULL,
	inlineattachment smallint NOT NULL DEFAULT 0,
	created timestamp NOT NULL,
	created_by integer NOT NULL,
	changed timestamp NOT NULL,
	changed_by integer NOT NULL
) ;
ALTER  TABLE faq_attachment OWNER TO otrs;
CREATE INDEX faq_attachment_faq_id ON faq_attachment (faq_id);
ALTER TABLE faq_attachment ADD PRIMARY KEY (id);
ALTER TABLE faq_attachment ALTER COLUMN ID SET NOT NULL;
ALTER TABLE faq_attachment ALTER COLUMN FAQ_ID SET NOT NULL;
ALTER TABLE faq_attachment ALTER COLUMN CONTENT SET NOT NULL;
ALTER TABLE faq_attachment ALTER COLUMN INLINEATTACHMENT SET NOT NULL;
ALTER TABLE faq_attachment ALTER COLUMN CREATED SET NOT NULL;
ALTER TABLE faq_attachment ALTER COLUMN CREATED_BY SET NOT NULL;
ALTER TABLE faq_attachment ALTER COLUMN CHANGED SET NOT NULL;
ALTER TABLE faq_attachment ALTER COLUMN CHANGED_BY SET NOT NULL;


CREATE TABLE faq_category (
	id integer NOT NULL,
	parent_id integer NOT NULL,
	name varchar(200) NOT NULL,
	comments varchar(200),
	valid_id smallint NOT NULL,
	created timestamp NOT NULL,
	created_by integer NOT NULL,
	changed timestamp NOT NULL,
	changed_by integer NOT NULL
) ;
ALTER  TABLE faq_category OWNER TO otrs;
CREATE INDEX faq_category_name ON faq_category (name);
CREATE INDEX faq_category_parent_id ON faq_category (parent_id);
CREATE INDEX faq_category_valid_id ON faq_category (valid_id);
ALTER TABLE faq_category ADD PRIMARY KEY (id);
ALTER TABLE faq_category ALTER COLUMN ID SET NOT NULL;
ALTER TABLE faq_category ALTER COLUMN PARENT_ID SET NOT NULL;
ALTER TABLE faq_category ALTER COLUMN NAME SET NOT NULL;
ALTER TABLE faq_category ALTER COLUMN VALID_ID SET NOT NULL;
ALTER TABLE faq_category ALTER COLUMN CREATED SET NOT NULL;
ALTER TABLE faq_category ALTER COLUMN CREATED_BY SET NOT NULL;
ALTER TABLE faq_category ALTER COLUMN CHANGED SET NOT NULL;
ALTER TABLE faq_category ALTER COLUMN CHANGED_BY SET NOT NULL;


CREATE TABLE faq_category_group (
	id integer NOT NULL,
	category_id integer NOT NULL,
	group_id integer NOT NULL,
	created timestamp,
	created_by integer,
	changed timestamp,
	changed_by integer
) ;
ALTER  TABLE faq_category_group OWNER TO otrs;
CREATE INDEX faq_category_group_category_id ON faq_category_group (category_id);
ALTER TABLE faq_category_group ADD PRIMARY KEY (id);
ALTER TABLE faq_category_group ALTER COLUMN ID SET NOT NULL;
ALTER TABLE faq_category_group ALTER COLUMN CATEGORY_ID SET NOT NULL;
ALTER TABLE faq_category_group ALTER COLUMN GROUP_ID SET NOT NULL;


CREATE TABLE faq_history (
	id integer NOT NULL,
	name varchar(200) NOT NULL,
	item_id integer NOT NULL,
	created timestamp NOT NULL,
	created_by integer NOT NULL,
	changed timestamp NOT NULL,
	changed_by integer NOT NULL
) ;
ALTER  TABLE faq_history OWNER TO otrs;
CREATE INDEX faq_history_item_id ON faq_history (item_id);
ALTER TABLE faq_history ADD PRIMARY KEY (id);
ALTER TABLE faq_history ALTER COLUMN ID SET NOT NULL;
ALTER TABLE faq_history ALTER COLUMN NAME SET NOT NULL;
ALTER TABLE faq_history ALTER COLUMN ITEM_ID SET NOT NULL;
ALTER TABLE faq_history ALTER COLUMN CREATED SET NOT NULL;
ALTER TABLE faq_history ALTER COLUMN CREATED_BY SET NOT NULL;
ALTER TABLE faq_history ALTER COLUMN CHANGED SET NOT NULL;
ALTER TABLE faq_history ALTER COLUMN CHANGED_BY SET NOT NULL;


CREATE TABLE faq_item (
	id integer NOT NULL,
	f_number varchar(200) NOT NULL,
	f_subject varchar(200),
	f_name varchar(200) NOT NULL,
	f_language_id smallint NOT NULL,
	state_id smallint NOT NULL,
	category_id smallint NOT NULL,
	approved smallint NOT NULL DEFAULT 1,
	valid_id smallint NOT NULL DEFAULT 1,
	f_keywords varchar(400),
	f_field1 text,
	f_field2 text,
	f_field3 text,
	f_field4 text,
	f_field5 text,
	f_field6 text,
	created timestamp NOT NULL,
	created_by integer NOT NULL,
	changed timestamp NOT NULL,
	changed_by integer NOT NULL,
	content_type varchar(250) NOT NULL DEFAULT 'text/html'
) ;
ALTER  TABLE faq_item OWNER TO otrs;
CREATE INDEX faq_item_category_id ON faq_item (category_id);
CREATE INDEX faq_item_state_id ON faq_item (state_id);
CREATE INDEX faq_item_valid_id ON faq_item (valid_id);
ALTER TABLE faq_item ADD PRIMARY KEY (id);
ALTER TABLE faq_item ALTER COLUMN ID SET NOT NULL;
ALTER TABLE faq_item ALTER COLUMN F_NUMBER SET NOT NULL;
ALTER TABLE faq_item ALTER COLUMN F_NAME SET NOT NULL;
ALTER TABLE faq_item ALTER COLUMN F_LANGUAGE_ID SET NOT NULL;
ALTER TABLE faq_item ALTER COLUMN STATE_ID SET NOT NULL;
ALTER TABLE faq_item ALTER COLUMN CATEGORY_ID SET NOT NULL;
ALTER TABLE faq_item ALTER COLUMN APPROVED SET NOT NULL;
ALTER TABLE faq_item ALTER COLUMN VALID_ID SET NOT NULL;
ALTER TABLE faq_item ALTER COLUMN CREATED SET NOT NULL;
ALTER TABLE faq_item ALTER COLUMN CREATED_BY SET NOT NULL;
ALTER TABLE faq_item ALTER COLUMN CHANGED SET NOT NULL;
ALTER TABLE faq_item ALTER COLUMN CHANGED_BY SET NOT NULL;
ALTER TABLE faq_item ALTER COLUMN CONTENT_TYPE SET NOT NULL;


CREATE TABLE faq_language (
	id smallint NOT NULL,
	name varchar(200) NOT NULL
) ;
ALTER  TABLE faq_language OWNER TO otrs;
ALTER TABLE faq_language ADD UNIQUE (name);
ALTER TABLE faq_language ADD PRIMARY KEY (id);
ALTER TABLE faq_language ALTER COLUMN ID SET NOT NULL;
ALTER TABLE faq_language ALTER COLUMN NAME SET NOT NULL;


CREATE TABLE faq_log (
	id bigint NOT NULL,
	item_id integer NOT NULL,
	interface varchar(80) NOT NULL,
	ip varchar(200),
	user_agent varchar(200),
	created timestamp NOT NULL
) ;
ALTER  TABLE faq_log OWNER TO otrs;
CREATE INDEX faq_log_item_id ON faq_log (item_id);
ALTER TABLE faq_log ADD PRIMARY KEY (id);
ALTER TABLE faq_log ALTER COLUMN ID SET NOT NULL;
ALTER TABLE faq_log ALTER COLUMN ITEM_ID SET NOT NULL;
ALTER TABLE faq_log ALTER COLUMN INTERFACE SET NOT NULL;
ALTER TABLE faq_log ALTER COLUMN CREATED SET NOT NULL;


CREATE TABLE faq_state (
	id smallint NOT NULL,
	name varchar(200) NOT NULL,
	type_id integer NOT NULL
) ;
ALTER  TABLE faq_state OWNER TO otrs;
CREATE INDEX faq_state_type_id ON faq_state (type_id);
ALTER TABLE faq_state ADD PRIMARY KEY (id);
ALTER TABLE faq_state ADD UNIQUE (name);
ALTER TABLE faq_state ALTER COLUMN ID SET NOT NULL;
ALTER TABLE faq_state ALTER COLUMN NAME SET NOT NULL;
ALTER TABLE faq_state ALTER COLUMN TYPE_ID SET NOT NULL;


CREATE TABLE faq_state_type (
	id smallint NOT NULL,
	name varchar(200) NOT NULL
) ;
ALTER  TABLE faq_state_type OWNER TO otrs;
ALTER TABLE faq_state_type ADD PRIMARY KEY (id);
ALTER TABLE faq_state_type ADD UNIQUE (name);
ALTER TABLE faq_state_type ALTER COLUMN ID SET NOT NULL;
ALTER TABLE faq_state_type ALTER COLUMN NAME SET NOT NULL;


CREATE TABLE faq_voting (
	id bigint NOT NULL,
	created_by varchar(200) NOT NULL,
	item_id integer NOT NULL,
	interface varchar(80),
	ip varchar(50),
	rate integer NOT NULL,
	created timestamp
) ;
ALTER  TABLE faq_voting OWNER TO otrs;
CREATE INDEX faq_voting_item_id ON faq_voting (item_id);
ALTER TABLE faq_voting ADD PRIMARY KEY (id);
ALTER TABLE faq_voting ALTER COLUMN ID SET NOT NULL;
ALTER TABLE faq_voting ALTER COLUMN CREATED_BY SET NOT NULL;
ALTER TABLE faq_voting ALTER COLUMN ITEM_ID SET NOT NULL;
ALTER TABLE faq_voting ALTER COLUMN RATE SET NOT NULL;


CREATE TABLE follow_up_possible (
	id smallint NOT NULL,
	name varchar(200) NOT NULL,
	comments varchar(250),
	valid_id smallint NOT NULL,
	create_time timestamp NOT NULL,
	create_by integer NOT NULL,
	change_time timestamp NOT NULL,
	change_by integer NOT NULL
) ;
ALTER  TABLE follow_up_possible OWNER TO otrs;
CREATE INDEX follow_up_possible_change_by ON follow_up_possible (change_by);
CREATE INDEX follow_up_possible_create_by ON follow_up_possible (create_by);
CREATE INDEX follow_up_possible_valid_id ON follow_up_possible (valid_id);
ALTER TABLE follow_up_possible ADD PRIMARY KEY (id);
ALTER TABLE follow_up_possible ADD UNIQUE (name);
ALTER TABLE follow_up_possible ALTER COLUMN ID SET NOT NULL;
ALTER TABLE follow_up_possible ALTER COLUMN NAME SET NOT NULL;
ALTER TABLE follow_up_possible ALTER COLUMN VALID_ID SET NOT NULL;
ALTER TABLE follow_up_possible ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE follow_up_possible ALTER COLUMN CREATE_BY SET NOT NULL;
ALTER TABLE follow_up_possible ALTER COLUMN CHANGE_TIME SET NOT NULL;
ALTER TABLE follow_up_possible ALTER COLUMN CHANGE_BY SET NOT NULL;


CREATE TABLE general_catalog (
	id integer NOT NULL,
	general_catalog_class varchar(100) NOT NULL,
	name varchar(100) NOT NULL,
	valid_id smallint NOT NULL,
	comments varchar(200),
	create_time timestamp NOT NULL,
	create_by integer NOT NULL,
	change_time timestamp NOT NULL,
	change_by integer NOT NULL
) ;
ALTER  TABLE general_catalog OWNER TO otrs;
CREATE INDEX general_catalog_change_by ON general_catalog (change_by);
CREATE INDEX general_catalog_create_by ON general_catalog (create_by);
ALTER TABLE general_catalog ADD UNIQUE (general_catalog_class,name);
ALTER TABLE general_catalog ADD PRIMARY KEY (id);
ALTER TABLE general_catalog ALTER COLUMN ID SET NOT NULL;
ALTER TABLE general_catalog ALTER COLUMN GENERAL_CATALOG_CLASS SET NOT NULL;
ALTER TABLE general_catalog ALTER COLUMN NAME SET NOT NULL;
ALTER TABLE general_catalog ALTER COLUMN VALID_ID SET NOT NULL;
ALTER TABLE general_catalog ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE general_catalog ALTER COLUMN CREATE_BY SET NOT NULL;
ALTER TABLE general_catalog ALTER COLUMN CHANGE_TIME SET NOT NULL;
ALTER TABLE general_catalog ALTER COLUMN CHANGE_BY SET NOT NULL;


CREATE TABLE general_catalog_preferences (
	general_catalog_id integer NOT NULL,
	pref_key varchar(255) NOT NULL,
	pref_value varchar(255)
) ;
ALTER  TABLE general_catalog_preferences OWNER TO otrs;
CREATE INDEX general_catalog_preferences_general_catalog_id ON general_catalog_preferences (general_catalog_id);
ALTER TABLE general_catalog_preferences ALTER COLUMN GENERAL_CATALOG_ID SET NOT NULL;
ALTER TABLE general_catalog_preferences ALTER COLUMN PREF_KEY SET NOT NULL;


CREATE TABLE generic_agent_jobs (
	job_name varchar(200) NOT NULL,
	job_key varchar(200) NOT NULL,
	job_value varchar(200)
) ;
ALTER  TABLE generic_agent_jobs OWNER TO otrs;
CREATE INDEX generic_agent_jobs_job_name ON generic_agent_jobs (job_name);
ALTER TABLE generic_agent_jobs ALTER COLUMN JOB_NAME SET NOT NULL;
ALTER TABLE generic_agent_jobs ALTER COLUMN JOB_KEY SET NOT NULL;


CREATE TABLE gi_debugger_entry (
	id bigint NOT NULL,
	communication_id varchar(32) NOT NULL,
	communication_type varchar(50) NOT NULL,
	remote_ip varchar(50),
	webservice_id integer NOT NULL,
	create_time timestamp NOT NULL
) ;
ALTER  TABLE gi_debugger_entry OWNER TO otrs;
CREATE INDEX gi_debugger_entry_webservice_id ON gi_debugger_entry (webservice_id);
CREATE INDEX gi_debugger_entry_create_time ON gi_debugger_entry (create_time);
ALTER TABLE gi_debugger_entry ADD PRIMARY KEY (id);
ALTER TABLE gi_debugger_entry ADD UNIQUE (communication_id);
ALTER TABLE gi_debugger_entry ALTER COLUMN ID SET NOT NULL;
ALTER TABLE gi_debugger_entry ALTER COLUMN COMMUNICATION_ID SET NOT NULL;
ALTER TABLE gi_debugger_entry ALTER COLUMN COMMUNICATION_TYPE SET NOT NULL;
ALTER TABLE gi_debugger_entry ALTER COLUMN WEBSERVICE_ID SET NOT NULL;
ALTER TABLE gi_debugger_entry ALTER COLUMN CREATE_TIME SET NOT NULL;


CREATE TABLE gi_debugger_entry_content (
	id bigint NOT NULL,
	gi_debugger_entry_id bigint NOT NULL,
	debug_level varchar(50) NOT NULL,
	subject varchar(255) NOT NULL,
	content text,
	create_time timestamp NOT NULL
) ;
ALTER  TABLE gi_debugger_entry_content OWNER TO otrs;
CREATE INDEX gi_debugger_entry_content_gi_debugger_entry_id ON gi_debugger_entry_content (gi_debugger_entry_id);
CREATE INDEX gi_debugger_entry_content_create_time ON gi_debugger_entry_content (create_time);
CREATE INDEX gi_debugger_entry_content_debug_level ON gi_debugger_entry_content (debug_level);
ALTER TABLE gi_debugger_entry_content ADD PRIMARY KEY (id);
ALTER TABLE gi_debugger_entry_content ALTER COLUMN ID SET NOT NULL;
ALTER TABLE gi_debugger_entry_content ALTER COLUMN GI_DEBUGGER_ENTRY_ID SET NOT NULL;
ALTER TABLE gi_debugger_entry_content ALTER COLUMN DEBUG_LEVEL SET NOT NULL;
ALTER TABLE gi_debugger_entry_content ALTER COLUMN SUBJECT SET NOT NULL;
ALTER TABLE gi_debugger_entry_content ALTER COLUMN CREATE_TIME SET NOT NULL;


CREATE TABLE gi_object_lock_state (
	webservice_id integer NOT NULL,
	object_type varchar(30) NOT NULL,
	object_id bigint NOT NULL,
	lock_state varchar(30) NOT NULL,
	lock_state_counter integer NOT NULL,
	create_time timestamp NOT NULL,
	change_time timestamp NOT NULL
) ;
ALTER  TABLE gi_object_lock_state OWNER TO otrs;
CREATE INDEX gi_object_lock_state_webservice_id ON gi_object_lock_state (webservice_id);
CREATE INDEX gi_object_lock_state_webservice_id_object_type_object_id_lock_s ON gi_object_lock_state (webservice_id, object_type, object_id, lock_state);
ALTER TABLE gi_object_lock_state ADD UNIQUE (webservice_id,object_type,object_id);
ALTER TABLE gi_object_lock_state ALTER COLUMN WEBSERVICE_ID SET NOT NULL;
ALTER TABLE gi_object_lock_state ALTER COLUMN OBJECT_TYPE SET NOT NULL;
ALTER TABLE gi_object_lock_state ALTER COLUMN OBJECT_ID SET NOT NULL;
ALTER TABLE gi_object_lock_state ALTER COLUMN LOCK_STATE SET NOT NULL;
ALTER TABLE gi_object_lock_state ALTER COLUMN LOCK_STATE_COUNTER SET NOT NULL;
ALTER TABLE gi_object_lock_state ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE gi_object_lock_state ALTER COLUMN CHANGE_TIME SET NOT NULL;


CREATE TABLE gi_webservice_config (
	id integer NOT NULL,
	name varchar(200) NOT NULL,
	config text NOT NULL,
	config_md5 varchar(32) NOT NULL,
	valid_id smallint NOT NULL,
	create_time timestamp NOT NULL,
	create_by integer NOT NULL,
	change_time timestamp NOT NULL,
	change_by integer NOT NULL
) ;
ALTER  TABLE gi_webservice_config OWNER TO otrs;
CREATE INDEX gi_webservice_config_change_by ON gi_webservice_config (change_by);
CREATE INDEX gi_webservice_config_create_by ON gi_webservice_config (create_by);
CREATE INDEX gi_webservice_config_valid_id ON gi_webservice_config (valid_id);
ALTER TABLE gi_webservice_config ADD UNIQUE (config_md5);
ALTER TABLE gi_webservice_config ADD UNIQUE (name);
ALTER TABLE gi_webservice_config ADD PRIMARY KEY (id);
ALTER TABLE gi_webservice_config ALTER COLUMN ID SET NOT NULL;
ALTER TABLE gi_webservice_config ALTER COLUMN NAME SET NOT NULL;
ALTER TABLE gi_webservice_config ALTER COLUMN CONFIG SET NOT NULL;
ALTER TABLE gi_webservice_config ALTER COLUMN CONFIG_MD5 SET NOT NULL;
ALTER TABLE gi_webservice_config ALTER COLUMN VALID_ID SET NOT NULL;
ALTER TABLE gi_webservice_config ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE gi_webservice_config ALTER COLUMN CREATE_BY SET NOT NULL;
ALTER TABLE gi_webservice_config ALTER COLUMN CHANGE_TIME SET NOT NULL;
ALTER TABLE gi_webservice_config ALTER COLUMN CHANGE_BY SET NOT NULL;


CREATE TABLE gi_webservice_config_history (
	id bigint NOT NULL,
	config_id integer NOT NULL,
	config text NOT NULL,
	config_md5 varchar(32) NOT NULL,
	create_time timestamp NOT NULL,
	create_by integer NOT NULL,
	change_time timestamp NOT NULL,
	change_by integer NOT NULL
) ;
ALTER  TABLE gi_webservice_config_history OWNER TO otrs;
CREATE INDEX gi_webservice_config_history_create_by ON gi_webservice_config_history (create_by);
CREATE INDEX gi_webservice_config_history_change_by ON gi_webservice_config_history (change_by);
CREATE INDEX gi_webservice_config_history_config_id ON gi_webservice_config_history (config_id);
ALTER TABLE gi_webservice_config_history ADD UNIQUE (config_md5);
ALTER TABLE gi_webservice_config_history ADD PRIMARY KEY (id);
ALTER TABLE gi_webservice_config_history ALTER COLUMN ID SET NOT NULL;
ALTER TABLE gi_webservice_config_history ALTER COLUMN CONFIG_ID SET NOT NULL;
ALTER TABLE gi_webservice_config_history ALTER COLUMN CONFIG SET NOT NULL;
ALTER TABLE gi_webservice_config_history ALTER COLUMN CONFIG_MD5 SET NOT NULL;
ALTER TABLE gi_webservice_config_history ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE gi_webservice_config_history ALTER COLUMN CREATE_BY SET NOT NULL;
ALTER TABLE gi_webservice_config_history ALTER COLUMN CHANGE_TIME SET NOT NULL;
ALTER TABLE gi_webservice_config_history ALTER COLUMN CHANGE_BY SET NOT NULL;


CREATE TABLE groups (
	id integer NOT NULL,
	name varchar(200) NOT NULL,
	comments varchar(250),
	valid_id smallint NOT NULL,
	create_time timestamp NOT NULL,
	create_by integer NOT NULL,
	change_time timestamp NOT NULL,
	change_by integer NOT NULL
) ;
ALTER  TABLE groups OWNER TO otrs;
CREATE INDEX groups_change_by ON groups (change_by);
CREATE INDEX groups_create_by ON groups (create_by);
CREATE INDEX groups_valid_id ON groups (valid_id);
ALTER TABLE groups ADD UNIQUE (name);
ALTER TABLE groups ADD PRIMARY KEY (id);
ALTER TABLE groups ALTER COLUMN ID SET NOT NULL;
ALTER TABLE groups ALTER COLUMN NAME SET NOT NULL;
ALTER TABLE groups ALTER COLUMN VALID_ID SET NOT NULL;
ALTER TABLE groups ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE groups ALTER COLUMN CREATE_BY SET NOT NULL;
ALTER TABLE groups ALTER COLUMN CHANGE_TIME SET NOT NULL;
ALTER TABLE groups ALTER COLUMN CHANGE_BY SET NOT NULL;


CREATE TABLE group_customer_user (
	user_id varchar(100) NOT NULL,
	group_id integer NOT NULL,
	permission_key varchar(20) NOT NULL,
	permission_value smallint NOT NULL,
	create_time timestamp NOT NULL,
	create_by integer NOT NULL,
	change_time timestamp NOT NULL,
	change_by integer NOT NULL
) ;
ALTER  TABLE group_customer_user OWNER TO otrs;
CREATE INDEX group_customer_user_change_by ON group_customer_user (change_by);
CREATE INDEX group_customer_user_create_by ON group_customer_user (create_by);
CREATE INDEX group_customer_user_group_id ON group_customer_user (group_id);
CREATE INDEX group_customer_user_user_id ON group_customer_user (user_id);
ALTER TABLE group_customer_user ALTER COLUMN USER_ID SET NOT NULL;
ALTER TABLE group_customer_user ALTER COLUMN GROUP_ID SET NOT NULL;
ALTER TABLE group_customer_user ALTER COLUMN PERMISSION_KEY SET NOT NULL;
ALTER TABLE group_customer_user ALTER COLUMN PERMISSION_VALUE SET NOT NULL;
ALTER TABLE group_customer_user ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE group_customer_user ALTER COLUMN CREATE_BY SET NOT NULL;
ALTER TABLE group_customer_user ALTER COLUMN CHANGE_TIME SET NOT NULL;
ALTER TABLE group_customer_user ALTER COLUMN CHANGE_BY SET NOT NULL;


CREATE TABLE group_role (
	role_id integer NOT NULL,
	group_id integer NOT NULL,
	permission_key varchar(20) NOT NULL,
	permission_value smallint NOT NULL,
	create_time timestamp NOT NULL,
	create_by integer NOT NULL,
	change_time timestamp NOT NULL,
	change_by integer NOT NULL
) ;
ALTER  TABLE group_role OWNER TO otrs;
CREATE INDEX group_role_change_by ON group_role (change_by);
CREATE INDEX group_role_create_by ON group_role (create_by);
CREATE INDEX group_role_group_id ON group_role (group_id);
CREATE INDEX group_role_role_id ON group_role (role_id);
ALTER TABLE group_role ALTER COLUMN ROLE_ID SET NOT NULL;
ALTER TABLE group_role ALTER COLUMN GROUP_ID SET NOT NULL;
ALTER TABLE group_role ALTER COLUMN PERMISSION_KEY SET NOT NULL;
ALTER TABLE group_role ALTER COLUMN PERMISSION_VALUE SET NOT NULL;
ALTER TABLE group_role ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE group_role ALTER COLUMN CREATE_BY SET NOT NULL;
ALTER TABLE group_role ALTER COLUMN CHANGE_TIME SET NOT NULL;
ALTER TABLE group_role ALTER COLUMN CHANGE_BY SET NOT NULL;


CREATE TABLE group_user (
	user_id integer NOT NULL,
	group_id integer NOT NULL,
	permission_key varchar(20) NOT NULL,
	permission_value smallint NOT NULL,
	create_time timestamp NOT NULL,
	create_by integer NOT NULL,
	change_time timestamp NOT NULL,
	change_by integer NOT NULL
) ;
ALTER  TABLE group_user OWNER TO otrs;
CREATE INDEX group_user_change_by ON group_user (change_by);
CREATE INDEX group_user_create_by ON group_user (create_by);
CREATE INDEX group_user_group_id ON group_user (group_id);
CREATE INDEX group_user_user_id ON group_user (user_id);
ALTER TABLE group_user ALTER COLUMN USER_ID SET NOT NULL;
ALTER TABLE group_user ALTER COLUMN GROUP_ID SET NOT NULL;
ALTER TABLE group_user ALTER COLUMN PERMISSION_KEY SET NOT NULL;
ALTER TABLE group_user ALTER COLUMN PERMISSION_VALUE SET NOT NULL;
ALTER TABLE group_user ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE group_user ALTER COLUMN CREATE_BY SET NOT NULL;
ALTER TABLE group_user ALTER COLUMN CHANGE_TIME SET NOT NULL;
ALTER TABLE group_user ALTER COLUMN CHANGE_BY SET NOT NULL;


CREATE TABLE imexport_format (
	id bigint NOT NULL,
	template_id bigint NOT NULL,
	data_key varchar(100) NOT NULL,
	data_value varchar(200) NOT NULL
) ;
ALTER  TABLE imexport_format OWNER TO otrs;
CREATE INDEX imexport_format_template_id ON imexport_format (template_id);
ALTER TABLE imexport_format ADD PRIMARY KEY (id);
ALTER TABLE imexport_format ALTER COLUMN ID SET NOT NULL;
ALTER TABLE imexport_format ALTER COLUMN TEMPLATE_ID SET NOT NULL;
ALTER TABLE imexport_format ALTER COLUMN DATA_KEY SET NOT NULL;
ALTER TABLE imexport_format ALTER COLUMN DATA_VALUE SET NOT NULL;


CREATE TABLE imexport_mapping (
	id bigint NOT NULL,
	template_id bigint NOT NULL,
	position integer NOT NULL
) ;
ALTER  TABLE imexport_mapping OWNER TO otrs;
CREATE INDEX imexport_mapping_template_id ON imexport_mapping (template_id);
ALTER TABLE imexport_mapping ADD PRIMARY KEY (id);
ALTER TABLE imexport_mapping ALTER COLUMN ID SET NOT NULL;
ALTER TABLE imexport_mapping ALTER COLUMN TEMPLATE_ID SET NOT NULL;
ALTER TABLE imexport_mapping ALTER COLUMN POSITION SET NOT NULL;


CREATE TABLE imexport_mapping_format (
	id bigint NOT NULL,
	mapping_id bigint NOT NULL,
	data_key varchar(100) NOT NULL,
	data_value varchar(200) NOT NULL
) ;
ALTER  TABLE imexport_mapping_format OWNER TO otrs;
CREATE INDEX imexport_mapping_format_mapping_id ON imexport_mapping_format (mapping_id);
ALTER TABLE imexport_mapping_format ADD PRIMARY KEY (id);
ALTER TABLE imexport_mapping_format ALTER COLUMN ID SET NOT NULL;
ALTER TABLE imexport_mapping_format ALTER COLUMN MAPPING_ID SET NOT NULL;
ALTER TABLE imexport_mapping_format ALTER COLUMN DATA_KEY SET NOT NULL;
ALTER TABLE imexport_mapping_format ALTER COLUMN DATA_VALUE SET NOT NULL;


CREATE TABLE imexport_mapping_object (
	id bigint NOT NULL,
	mapping_id bigint NOT NULL,
	data_key varchar(100) NOT NULL,
	data_value varchar(200) NOT NULL
) ;
ALTER  TABLE imexport_mapping_object OWNER TO otrs;
CREATE INDEX imexport_mapping_object_mapping_id ON imexport_mapping_object (mapping_id);
ALTER TABLE imexport_mapping_object ADD PRIMARY KEY (id);
ALTER TABLE imexport_mapping_object ALTER COLUMN ID SET NOT NULL;
ALTER TABLE imexport_mapping_object ALTER COLUMN MAPPING_ID SET NOT NULL;
ALTER TABLE imexport_mapping_object ALTER COLUMN DATA_KEY SET NOT NULL;
ALTER TABLE imexport_mapping_object ALTER COLUMN DATA_VALUE SET NOT NULL;


CREATE TABLE imexport_object (
	id bigint NOT NULL,
	template_id bigint NOT NULL,
	data_key varchar(100) NOT NULL,
	data_value varchar(200) NOT NULL
) ;
ALTER  TABLE imexport_object OWNER TO otrs;
CREATE INDEX imexport_object_template_id ON imexport_object (template_id);
ALTER TABLE imexport_object ADD PRIMARY KEY (id);
ALTER TABLE imexport_object ALTER COLUMN ID SET NOT NULL;
ALTER TABLE imexport_object ALTER COLUMN TEMPLATE_ID SET NOT NULL;
ALTER TABLE imexport_object ALTER COLUMN DATA_KEY SET NOT NULL;
ALTER TABLE imexport_object ALTER COLUMN DATA_VALUE SET NOT NULL;


CREATE TABLE imexport_search (
	id bigint NOT NULL,
	template_id bigint NOT NULL,
	data_key varchar(100) NOT NULL,
	data_value varchar(200) NOT NULL
) ;
ALTER  TABLE imexport_search OWNER TO otrs;
CREATE INDEX imexport_search_template_id ON imexport_search (template_id);
ALTER TABLE imexport_search ADD PRIMARY KEY (id);
ALTER TABLE imexport_search ALTER COLUMN ID SET NOT NULL;
ALTER TABLE imexport_search ALTER COLUMN TEMPLATE_ID SET NOT NULL;
ALTER TABLE imexport_search ALTER COLUMN DATA_KEY SET NOT NULL;
ALTER TABLE imexport_search ALTER COLUMN DATA_VALUE SET NOT NULL;


CREATE TABLE imexport_template (
	id bigint NOT NULL,
	imexport_object varchar(100) NOT NULL,
	imexport_format varchar(100) NOT NULL,
	name varchar(100) NOT NULL,
	valid_id smallint NOT NULL,
	comments varchar(200),
	create_time timestamp,
	create_by integer,
	change_time timestamp,
	change_by integer
) ;
ALTER  TABLE imexport_template OWNER TO otrs;
CREATE INDEX imexport_template_change_by ON imexport_template (change_by);
CREATE INDEX imexport_template_create_by ON imexport_template (create_by);
ALTER TABLE imexport_template ADD PRIMARY KEY (id);
ALTER TABLE imexport_template ALTER COLUMN ID SET NOT NULL;
ALTER TABLE imexport_template ALTER COLUMN IMEXPORT_OBJECT SET NOT NULL;
ALTER TABLE imexport_template ALTER COLUMN IMEXPORT_FORMAT SET NOT NULL;
ALTER TABLE imexport_template ALTER COLUMN NAME SET NOT NULL;
ALTER TABLE imexport_template ALTER COLUMN VALID_ID SET NOT NULL;


CREATE TABLE link_object (
	id smallint NOT NULL,
	name varchar(100) NOT NULL
) ;
ALTER  TABLE link_object OWNER TO otrs;
ALTER TABLE link_object ADD PRIMARY KEY (id);
ALTER TABLE link_object ADD UNIQUE (name);
ALTER TABLE link_object ALTER COLUMN ID SET NOT NULL;
ALTER TABLE link_object ALTER COLUMN NAME SET NOT NULL;


CREATE TABLE link_relation (
	source_object_id smallint NOT NULL,
	source_key varchar(50) NOT NULL,
	target_object_id smallint NOT NULL,
	target_key varchar(50) NOT NULL,
	type_id smallint NOT NULL,
	state_id smallint NOT NULL,
	create_time timestamp NOT NULL,
	create_by integer NOT NULL
) ;
ALTER  TABLE link_relation OWNER TO otrs;
CREATE INDEX link_relation_create_by ON link_relation (create_by);
CREATE INDEX link_relation_source_object_id ON link_relation (source_object_id);
CREATE INDEX link_relation_state_id ON link_relation (state_id);
CREATE INDEX link_relation_target_object_id ON link_relation (target_object_id);
CREATE INDEX link_relation_type_id ON link_relation (type_id);
CREATE INDEX link_relation_target_key_target_object_id_source_key_source_obj ON link_relation (target_key, target_object_id, source_key, source_object_id, type_id, state_id);
CREATE INDEX link_relation_source_object_id_source_key_state_id ON link_relation (source_object_id, source_key, state_id);
CREATE INDEX link_relation_target_object_id_target_key_state_id ON link_relation (target_object_id, target_key, state_id);
ALTER TABLE link_relation ADD UNIQUE (source_object_id,source_key,target_object_id,target_key,type_id);
ALTER TABLE link_relation ALTER COLUMN SOURCE_OBJECT_ID SET NOT NULL;
ALTER TABLE link_relation ALTER COLUMN SOURCE_KEY SET NOT NULL;
ALTER TABLE link_relation ALTER COLUMN TARGET_OBJECT_ID SET NOT NULL;
ALTER TABLE link_relation ALTER COLUMN TARGET_KEY SET NOT NULL;
ALTER TABLE link_relation ALTER COLUMN TYPE_ID SET NOT NULL;
ALTER TABLE link_relation ALTER COLUMN STATE_ID SET NOT NULL;
ALTER TABLE link_relation ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE link_relation ALTER COLUMN CREATE_BY SET NOT NULL;


CREATE TABLE link_state (
	id smallint NOT NULL,
	name varchar(50) NOT NULL,
	valid_id smallint NOT NULL,
	create_time timestamp NOT NULL,
	create_by integer NOT NULL,
	change_time timestamp NOT NULL,
	change_by integer NOT NULL
) ;
ALTER  TABLE link_state OWNER TO otrs;
CREATE INDEX link_state_change_by ON link_state (change_by);
CREATE INDEX link_state_create_by ON link_state (create_by);
CREATE INDEX link_state_valid_id ON link_state (valid_id);
ALTER TABLE link_state ADD UNIQUE (name);
ALTER TABLE link_state ADD PRIMARY KEY (id);
ALTER TABLE link_state ALTER COLUMN ID SET NOT NULL;
ALTER TABLE link_state ALTER COLUMN NAME SET NOT NULL;
ALTER TABLE link_state ALTER COLUMN VALID_ID SET NOT NULL;
ALTER TABLE link_state ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE link_state ALTER COLUMN CREATE_BY SET NOT NULL;
ALTER TABLE link_state ALTER COLUMN CHANGE_TIME SET NOT NULL;
ALTER TABLE link_state ALTER COLUMN CHANGE_BY SET NOT NULL;


CREATE TABLE link_type (
	id smallint NOT NULL,
	name varchar(50) NOT NULL,
	valid_id smallint NOT NULL,
	create_time timestamp NOT NULL,
	create_by integer NOT NULL,
	change_time timestamp NOT NULL,
	change_by integer NOT NULL
) ;
ALTER  TABLE link_type OWNER TO otrs;
CREATE INDEX link_type_change_by ON link_type (change_by);
CREATE INDEX link_type_create_by ON link_type (create_by);
CREATE INDEX link_type_valid_id ON link_type (valid_id);
ALTER TABLE link_type ADD PRIMARY KEY (id);
ALTER TABLE link_type ADD UNIQUE (name);
ALTER TABLE link_type ALTER COLUMN ID SET NOT NULL;
ALTER TABLE link_type ALTER COLUMN NAME SET NOT NULL;
ALTER TABLE link_type ALTER COLUMN VALID_ID SET NOT NULL;
ALTER TABLE link_type ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE link_type ALTER COLUMN CREATE_BY SET NOT NULL;
ALTER TABLE link_type ALTER COLUMN CHANGE_TIME SET NOT NULL;
ALTER TABLE link_type ALTER COLUMN CHANGE_BY SET NOT NULL;


CREATE TABLE mail_account (
	id integer NOT NULL,
	login varchar(200) NOT NULL,
	pw varchar(200) NOT NULL,
	host varchar(200) NOT NULL,
	account_type varchar(20) NOT NULL,
	queue_id integer NOT NULL,
	trusted smallint NOT NULL,
	imap_folder varchar(250),
	comments varchar(250),
	valid_id smallint NOT NULL,
	create_time timestamp NOT NULL,
	create_by integer NOT NULL,
	change_time timestamp NOT NULL,
	change_by integer NOT NULL
) ;
ALTER  TABLE mail_account OWNER TO otrs;
CREATE INDEX mail_account_change_by ON mail_account (change_by);
CREATE INDEX mail_account_create_by ON mail_account (create_by);
CREATE INDEX mail_account_valid_id ON mail_account (valid_id);
ALTER TABLE mail_account ADD PRIMARY KEY (id);
ALTER TABLE mail_account ALTER COLUMN ID SET NOT NULL;
ALTER TABLE mail_account ALTER COLUMN LOGIN SET NOT NULL;
ALTER TABLE mail_account ALTER COLUMN PW SET NOT NULL;
ALTER TABLE mail_account ALTER COLUMN HOST SET NOT NULL;
ALTER TABLE mail_account ALTER COLUMN ACCOUNT_TYPE SET NOT NULL;
ALTER TABLE mail_account ALTER COLUMN QUEUE_ID SET NOT NULL;
ALTER TABLE mail_account ALTER COLUMN TRUSTED SET NOT NULL;
ALTER TABLE mail_account ALTER COLUMN VALID_ID SET NOT NULL;
ALTER TABLE mail_account ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE mail_account ALTER COLUMN CREATE_BY SET NOT NULL;
ALTER TABLE mail_account ALTER COLUMN CHANGE_TIME SET NOT NULL;
ALTER TABLE mail_account ALTER COLUMN CHANGE_BY SET NOT NULL;


CREATE TABLE notifications (
	id integer NOT NULL,
	notification_type varchar(200) NOT NULL,
	notification_charset varchar(60) NOT NULL,
	notification_language varchar(60) NOT NULL,
	subject varchar(200) NOT NULL,
	text varchar(4000) NOT NULL,
	content_type varchar(250),
	create_time timestamp NOT NULL,
	create_by integer NOT NULL,
	change_time timestamp NOT NULL,
	change_by integer NOT NULL
) ;
ALTER  TABLE notifications OWNER TO otrs;
CREATE INDEX notifications_change_by ON notifications (change_by);
CREATE INDEX notifications_create_by ON notifications (create_by);
ALTER TABLE notifications ADD PRIMARY KEY (id);
ALTER TABLE notifications ALTER COLUMN ID SET NOT NULL;
ALTER TABLE notifications ALTER COLUMN NOTIFICATION_TYPE SET NOT NULL;
ALTER TABLE notifications ALTER COLUMN NOTIFICATION_CHARSET SET NOT NULL;
ALTER TABLE notifications ALTER COLUMN NOTIFICATION_LANGUAGE SET NOT NULL;
ALTER TABLE notifications ALTER COLUMN SUBJECT SET NOT NULL;
ALTER TABLE notifications ALTER COLUMN TEXT SET NOT NULL;
ALTER TABLE notifications ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE notifications ALTER COLUMN CREATE_BY SET NOT NULL;
ALTER TABLE notifications ALTER COLUMN CHANGE_TIME SET NOT NULL;
ALTER TABLE notifications ALTER COLUMN CHANGE_BY SET NOT NULL;


CREATE TABLE notification_event (
	id integer NOT NULL,
	name varchar(200) NOT NULL,
	valid_id smallint NOT NULL,
	comments varchar(250),
	create_time timestamp NOT NULL,
	create_by integer NOT NULL,
	change_time timestamp NOT NULL,
	change_by integer NOT NULL
) ;
ALTER  TABLE notification_event OWNER TO otrs;
CREATE INDEX notification_event_change_by ON notification_event (change_by);
CREATE INDEX notification_event_create_by ON notification_event (create_by);
CREATE INDEX notification_event_valid_id ON notification_event (valid_id);
ALTER TABLE notification_event ADD UNIQUE (name);
ALTER TABLE notification_event ADD PRIMARY KEY (id);
ALTER TABLE notification_event ALTER COLUMN ID SET NOT NULL;
ALTER TABLE notification_event ALTER COLUMN NAME SET NOT NULL;
ALTER TABLE notification_event ALTER COLUMN VALID_ID SET NOT NULL;
ALTER TABLE notification_event ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE notification_event ALTER COLUMN CREATE_BY SET NOT NULL;
ALTER TABLE notification_event ALTER COLUMN CHANGE_TIME SET NOT NULL;
ALTER TABLE notification_event ALTER COLUMN CHANGE_BY SET NOT NULL;


CREATE TABLE notification_event_item (
	notification_id integer NOT NULL,
	event_key varchar(200) NOT NULL,
	event_value varchar(200) NOT NULL
) ;
ALTER  TABLE notification_event_item OWNER TO otrs;
CREATE INDEX notification_event_item_event_key ON notification_event_item (event_key);
CREATE INDEX notification_event_item_event_value ON notification_event_item (event_value);
CREATE INDEX notification_event_item_notification_id ON notification_event_item (notification_id);
ALTER TABLE notification_event_item ALTER COLUMN NOTIFICATION_ID SET NOT NULL;
ALTER TABLE notification_event_item ALTER COLUMN EVENT_KEY SET NOT NULL;
ALTER TABLE notification_event_item ALTER COLUMN EVENT_VALUE SET NOT NULL;


CREATE TABLE notification_event_message (
	id integer NOT NULL,
	notification_id integer NOT NULL,
	subject varchar(200) NOT NULL,
	text varchar(4000) NOT NULL,
	content_type varchar(250) NOT NULL,
	language varchar(60) NOT NULL
) ;
ALTER  TABLE notification_event_message OWNER TO otrs;
CREATE INDEX notification_event_message_language ON notification_event_message (language);
CREATE INDEX notification_event_message_notification_id ON notification_event_message (notification_id);
ALTER TABLE notification_event_message ADD PRIMARY KEY (id);
ALTER TABLE notification_event_message ADD UNIQUE (notification_id,language);
ALTER TABLE notification_event_message ALTER COLUMN ID SET NOT NULL;
ALTER TABLE notification_event_message ALTER COLUMN NOTIFICATION_ID SET NOT NULL;
ALTER TABLE notification_event_message ALTER COLUMN SUBJECT SET NOT NULL;
ALTER TABLE notification_event_message ALTER COLUMN TEXT SET NOT NULL;
ALTER TABLE notification_event_message ALTER COLUMN CONTENT_TYPE SET NOT NULL;
ALTER TABLE notification_event_message ALTER COLUMN LANGUAGE SET NOT NULL;


CREATE TABLE package_repository (
	id integer NOT NULL,
	name varchar(200) NOT NULL,
	version varchar(250) NOT NULL,
	vendor varchar(250) NOT NULL,
	install_status varchar(250) NOT NULL,
	filename varchar(250),
	content_type varchar(250),
	content text NOT NULL,
	create_time timestamp NOT NULL,
	create_by integer NOT NULL,
	change_time timestamp NOT NULL,
	change_by integer NOT NULL
) ;
ALTER  TABLE package_repository OWNER TO otrs;
CREATE INDEX package_repository_change_by ON package_repository (change_by);
CREATE INDEX package_repository_create_by ON package_repository (create_by);
ALTER TABLE package_repository ADD PRIMARY KEY (id);
ALTER TABLE package_repository ALTER COLUMN ID SET NOT NULL;
ALTER TABLE package_repository ALTER COLUMN NAME SET NOT NULL;
ALTER TABLE package_repository ALTER COLUMN VERSION SET NOT NULL;
ALTER TABLE package_repository ALTER COLUMN VENDOR SET NOT NULL;
ALTER TABLE package_repository ALTER COLUMN INSTALL_STATUS SET NOT NULL;
ALTER TABLE package_repository ALTER COLUMN CONTENT SET NOT NULL;
ALTER TABLE package_repository ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE package_repository ALTER COLUMN CREATE_BY SET NOT NULL;
ALTER TABLE package_repository ALTER COLUMN CHANGE_TIME SET NOT NULL;
ALTER TABLE package_repository ALTER COLUMN CHANGE_BY SET NOT NULL;


CREATE TABLE personal_queues (
	user_id integer NOT NULL,
	queue_id integer NOT NULL
) ;
ALTER  TABLE personal_queues OWNER TO otrs;
CREATE INDEX personal_queues_queue_id ON personal_queues (queue_id);
CREATE INDEX personal_queues_user_id ON personal_queues (user_id);
ALTER TABLE personal_queues ALTER COLUMN USER_ID SET NOT NULL;
ALTER TABLE personal_queues ALTER COLUMN QUEUE_ID SET NOT NULL;


CREATE TABLE personal_services (
	user_id integer NOT NULL,
	service_id integer NOT NULL
) ;
ALTER  TABLE personal_services OWNER TO otrs;
CREATE INDEX personal_services_service_id ON personal_services (service_id);
CREATE INDEX personal_services_user_id ON personal_services (user_id);
ALTER TABLE personal_services ALTER COLUMN USER_ID SET NOT NULL;
ALTER TABLE personal_services ALTER COLUMN SERVICE_ID SET NOT NULL;


CREATE TABLE pm_activity (
	id integer NOT NULL,
	entity_id varchar(50) NOT NULL,
	name varchar(200) NOT NULL,
	config text NOT NULL,
	create_time timestamp NOT NULL,
	create_by integer NOT NULL,
	change_time timestamp NOT NULL,
	change_by integer NOT NULL
) ;
ALTER  TABLE pm_activity OWNER TO otrs;
CREATE INDEX pm_activity_change_by ON pm_activity (change_by);
CREATE INDEX pm_activity_create_by ON pm_activity (create_by);
ALTER TABLE pm_activity ADD PRIMARY KEY (id);
ALTER TABLE pm_activity ADD UNIQUE (entity_id);
ALTER TABLE pm_activity ALTER COLUMN ID SET NOT NULL;
ALTER TABLE pm_activity ALTER COLUMN ENTITY_ID SET NOT NULL;
ALTER TABLE pm_activity ALTER COLUMN NAME SET NOT NULL;
ALTER TABLE pm_activity ALTER COLUMN CONFIG SET NOT NULL;
ALTER TABLE pm_activity ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE pm_activity ALTER COLUMN CREATE_BY SET NOT NULL;
ALTER TABLE pm_activity ALTER COLUMN CHANGE_TIME SET NOT NULL;
ALTER TABLE pm_activity ALTER COLUMN CHANGE_BY SET NOT NULL;


CREATE TABLE pm_activity_dialog (
	id integer NOT NULL,
	entity_id varchar(50) NOT NULL,
	name varchar(200) NOT NULL,
	config text NOT NULL,
	create_time timestamp NOT NULL,
	create_by integer NOT NULL,
	change_time timestamp NOT NULL,
	change_by integer NOT NULL
) ;
ALTER  TABLE pm_activity_dialog OWNER TO otrs;
CREATE INDEX pm_activity_dialog_change_by ON pm_activity_dialog (change_by);
CREATE INDEX pm_activity_dialog_create_by ON pm_activity_dialog (create_by);
ALTER TABLE pm_activity_dialog ADD UNIQUE (entity_id);
ALTER TABLE pm_activity_dialog ADD PRIMARY KEY (id);
ALTER TABLE pm_activity_dialog ALTER COLUMN ID SET NOT NULL;
ALTER TABLE pm_activity_dialog ALTER COLUMN ENTITY_ID SET NOT NULL;
ALTER TABLE pm_activity_dialog ALTER COLUMN NAME SET NOT NULL;
ALTER TABLE pm_activity_dialog ALTER COLUMN CONFIG SET NOT NULL;
ALTER TABLE pm_activity_dialog ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE pm_activity_dialog ALTER COLUMN CREATE_BY SET NOT NULL;
ALTER TABLE pm_activity_dialog ALTER COLUMN CHANGE_TIME SET NOT NULL;
ALTER TABLE pm_activity_dialog ALTER COLUMN CHANGE_BY SET NOT NULL;


CREATE TABLE pm_entity_sync (
	entity_type varchar(30) NOT NULL,
	entity_id varchar(50) NOT NULL,
	sync_state varchar(30) NOT NULL,
	create_time timestamp NOT NULL,
	change_time timestamp NOT NULL
) ;
ALTER  TABLE pm_entity_sync OWNER TO otrs;
ALTER TABLE pm_entity_sync ADD UNIQUE (entity_type,entity_id);
ALTER TABLE pm_entity_sync ALTER COLUMN ENTITY_TYPE SET NOT NULL;
ALTER TABLE pm_entity_sync ALTER COLUMN ENTITY_ID SET NOT NULL;
ALTER TABLE pm_entity_sync ALTER COLUMN SYNC_STATE SET NOT NULL;
ALTER TABLE pm_entity_sync ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE pm_entity_sync ALTER COLUMN CHANGE_TIME SET NOT NULL;


CREATE TABLE pm_process (
	id integer NOT NULL,
	entity_id varchar(50) NOT NULL,
	name varchar(200) NOT NULL,
	state_entity_id varchar(50) NOT NULL,
	layout text NOT NULL,
	config text NOT NULL,
	create_time timestamp NOT NULL,
	create_by integer NOT NULL,
	change_time timestamp NOT NULL,
	change_by integer NOT NULL
) ;
ALTER  TABLE pm_process OWNER TO otrs;
CREATE INDEX pm_process_change_by ON pm_process (change_by);
CREATE INDEX pm_process_create_by ON pm_process (create_by);
ALTER TABLE pm_process ADD UNIQUE (entity_id);
ALTER TABLE pm_process ADD PRIMARY KEY (id);
ALTER TABLE pm_process ALTER COLUMN ID SET NOT NULL;
ALTER TABLE pm_process ALTER COLUMN ENTITY_ID SET NOT NULL;
ALTER TABLE pm_process ALTER COLUMN NAME SET NOT NULL;
ALTER TABLE pm_process ALTER COLUMN STATE_ENTITY_ID SET NOT NULL;
ALTER TABLE pm_process ALTER COLUMN LAYOUT SET NOT NULL;
ALTER TABLE pm_process ALTER COLUMN CONFIG SET NOT NULL;
ALTER TABLE pm_process ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE pm_process ALTER COLUMN CREATE_BY SET NOT NULL;
ALTER TABLE pm_process ALTER COLUMN CHANGE_TIME SET NOT NULL;
ALTER TABLE pm_process ALTER COLUMN CHANGE_BY SET NOT NULL;


CREATE TABLE pm_transition (
	id integer NOT NULL,
	entity_id varchar(50) NOT NULL,
	name varchar(200) NOT NULL,
	config text NOT NULL,
	create_time timestamp NOT NULL,
	create_by integer NOT NULL,
	change_time timestamp NOT NULL,
	change_by integer NOT NULL
) ;
ALTER  TABLE pm_transition OWNER TO otrs;
CREATE INDEX pm_transition_change_by ON pm_transition (change_by);
CREATE INDEX pm_transition_create_by ON pm_transition (create_by);
ALTER TABLE pm_transition ADD UNIQUE (entity_id);
ALTER TABLE pm_transition ADD PRIMARY KEY (id);
ALTER TABLE pm_transition ALTER COLUMN ID SET NOT NULL;
ALTER TABLE pm_transition ALTER COLUMN ENTITY_ID SET NOT NULL;
ALTER TABLE pm_transition ALTER COLUMN NAME SET NOT NULL;
ALTER TABLE pm_transition ALTER COLUMN CONFIG SET NOT NULL;
ALTER TABLE pm_transition ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE pm_transition ALTER COLUMN CREATE_BY SET NOT NULL;
ALTER TABLE pm_transition ALTER COLUMN CHANGE_TIME SET NOT NULL;
ALTER TABLE pm_transition ALTER COLUMN CHANGE_BY SET NOT NULL;


CREATE TABLE pm_transition_action (
	id integer NOT NULL,
	entity_id varchar(50) NOT NULL,
	name varchar(200) NOT NULL,
	config text NOT NULL,
	create_time timestamp NOT NULL,
	create_by integer NOT NULL,
	change_time timestamp NOT NULL,
	change_by integer NOT NULL
) ;
ALTER  TABLE pm_transition_action OWNER TO otrs;
CREATE INDEX pm_transition_action_change_by ON pm_transition_action (change_by);
CREATE INDEX pm_transition_action_create_by ON pm_transition_action (create_by);
ALTER TABLE pm_transition_action ADD UNIQUE (entity_id);
ALTER TABLE pm_transition_action ADD PRIMARY KEY (id);
ALTER TABLE pm_transition_action ALTER COLUMN ID SET NOT NULL;
ALTER TABLE pm_transition_action ALTER COLUMN ENTITY_ID SET NOT NULL;
ALTER TABLE pm_transition_action ALTER COLUMN NAME SET NOT NULL;
ALTER TABLE pm_transition_action ALTER COLUMN CONFIG SET NOT NULL;
ALTER TABLE pm_transition_action ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE pm_transition_action ALTER COLUMN CREATE_BY SET NOT NULL;
ALTER TABLE pm_transition_action ALTER COLUMN CHANGE_TIME SET NOT NULL;
ALTER TABLE pm_transition_action ALTER COLUMN CHANGE_BY SET NOT NULL;


CREATE TABLE postmaster_filter (
	f_name varchar(200) NOT NULL,
	f_stop smallint,
	f_type varchar(20) NOT NULL,
	f_key varchar(200) NOT NULL,
	f_value varchar(200) NOT NULL,
	f_not smallint
) ;
ALTER  TABLE postmaster_filter OWNER TO otrs;
CREATE INDEX postmaster_filter_f_name ON postmaster_filter (f_name);
ALTER TABLE postmaster_filter ALTER COLUMN F_NAME SET NOT NULL;
ALTER TABLE postmaster_filter ALTER COLUMN F_TYPE SET NOT NULL;
ALTER TABLE postmaster_filter ALTER COLUMN F_KEY SET NOT NULL;
ALTER TABLE postmaster_filter ALTER COLUMN F_VALUE SET NOT NULL;


CREATE TABLE process_id (
	process_name varchar(200) NOT NULL,
	process_id varchar(200) NOT NULL,
	process_host varchar(200) NOT NULL,
	process_create integer NOT NULL,
	process_change integer NOT NULL
) ;
ALTER  TABLE process_id OWNER TO otrs;
ALTER TABLE process_id ALTER COLUMN PROCESS_NAME SET NOT NULL;
ALTER TABLE process_id ALTER COLUMN PROCESS_ID SET NOT NULL;
ALTER TABLE process_id ALTER COLUMN PROCESS_HOST SET NOT NULL;
ALTER TABLE process_id ALTER COLUMN PROCESS_CREATE SET NOT NULL;
ALTER TABLE process_id ALTER COLUMN PROCESS_CHANGE SET NOT NULL;


CREATE TABLE queue (
	id integer NOT NULL,
	name varchar(200) NOT NULL,
	group_id integer NOT NULL,
	unlock_timeout integer,
	first_response_time integer,
	first_response_notify smallint,
	update_time integer,
	update_notify smallint,
	solution_time integer,
	solution_notify smallint,
	system_address_id smallint NOT NULL,
	calendar_name varchar(100),
	default_sign_key varchar(100),
	salutation_id smallint NOT NULL,
	signature_id smallint NOT NULL,
	follow_up_id smallint NOT NULL,
	follow_up_lock smallint NOT NULL,
	comments varchar(250),
	valid_id smallint NOT NULL,
	create_time timestamp NOT NULL,
	create_by integer NOT NULL,
	change_time timestamp NOT NULL,
	change_by integer NOT NULL
) ;
ALTER  TABLE queue OWNER TO otrs;
CREATE INDEX queue_change_by ON queue (change_by);
CREATE INDEX queue_create_by ON queue (create_by);
CREATE INDEX queue_follow_up_id ON queue (follow_up_id);
CREATE INDEX queue_salutation_id ON queue (salutation_id);
CREATE INDEX queue_signature_id ON queue (signature_id);
CREATE INDEX queue_system_address_id ON queue (system_address_id);
CREATE INDEX queue_valid_id ON queue (valid_id);
CREATE INDEX queue_group_id ON queue (group_id);
ALTER TABLE queue ADD PRIMARY KEY (id);
ALTER TABLE queue ADD UNIQUE (name);
ALTER TABLE queue ALTER COLUMN ID SET NOT NULL;
ALTER TABLE queue ALTER COLUMN NAME SET NOT NULL;
ALTER TABLE queue ALTER COLUMN GROUP_ID SET NOT NULL;
ALTER TABLE queue ALTER COLUMN SYSTEM_ADDRESS_ID SET NOT NULL;
ALTER TABLE queue ALTER COLUMN SALUTATION_ID SET NOT NULL;
ALTER TABLE queue ALTER COLUMN SIGNATURE_ID SET NOT NULL;
ALTER TABLE queue ALTER COLUMN FOLLOW_UP_ID SET NOT NULL;
ALTER TABLE queue ALTER COLUMN FOLLOW_UP_LOCK SET NOT NULL;
ALTER TABLE queue ALTER COLUMN VALID_ID SET NOT NULL;
ALTER TABLE queue ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE queue ALTER COLUMN CREATE_BY SET NOT NULL;
ALTER TABLE queue ALTER COLUMN CHANGE_TIME SET NOT NULL;
ALTER TABLE queue ALTER COLUMN CHANGE_BY SET NOT NULL;


CREATE TABLE queue_auto_response (
	id integer NOT NULL,
	queue_id integer NOT NULL,
	auto_response_id integer NOT NULL,
	create_time timestamp NOT NULL,
	create_by integer NOT NULL,
	change_time timestamp NOT NULL,
	change_by integer NOT NULL
) ;
ALTER  TABLE queue_auto_response OWNER TO otrs;
CREATE INDEX queue_auto_response_auto_response_id ON queue_auto_response (auto_response_id);
CREATE INDEX queue_auto_response_change_by ON queue_auto_response (change_by);
CREATE INDEX queue_auto_response_create_by ON queue_auto_response (create_by);
CREATE INDEX queue_auto_response_queue_id ON queue_auto_response (queue_id);
ALTER TABLE queue_auto_response ADD PRIMARY KEY (id);
ALTER TABLE queue_auto_response ALTER COLUMN ID SET NOT NULL;
ALTER TABLE queue_auto_response ALTER COLUMN QUEUE_ID SET NOT NULL;
ALTER TABLE queue_auto_response ALTER COLUMN AUTO_RESPONSE_ID SET NOT NULL;
ALTER TABLE queue_auto_response ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE queue_auto_response ALTER COLUMN CREATE_BY SET NOT NULL;
ALTER TABLE queue_auto_response ALTER COLUMN CHANGE_TIME SET NOT NULL;
ALTER TABLE queue_auto_response ALTER COLUMN CHANGE_BY SET NOT NULL;


CREATE TABLE queue_preferences (
	queue_id integer NOT NULL,
	preferences_key varchar(150) NOT NULL,
	preferences_value varchar(250)
) ;
ALTER  TABLE queue_preferences OWNER TO otrs;
CREATE INDEX queue_preferences_queue_id ON queue_preferences (queue_id);
ALTER TABLE queue_preferences ALTER COLUMN QUEUE_ID SET NOT NULL;
ALTER TABLE queue_preferences ALTER COLUMN PREFERENCES_KEY SET NOT NULL;


CREATE TABLE queue_standard_template (
	queue_id integer NOT NULL,
	standard_template_id integer NOT NULL,
	create_time timestamp NOT NULL,
	create_by integer NOT NULL,
	change_time timestamp NOT NULL,
	change_by integer NOT NULL
) ;
ALTER  TABLE queue_standard_template OWNER TO otrs;
CREATE INDEX queue_standard_template_create_by ON queue_standard_template (create_by);
CREATE INDEX queue_standard_template_change_by ON queue_standard_template (change_by);
CREATE INDEX queue_standard_template_queue_id ON queue_standard_template (queue_id);
CREATE INDEX queue_standard_template_standard_template_id ON queue_standard_template (standard_template_id);
ALTER TABLE queue_standard_template ALTER COLUMN QUEUE_ID SET NOT NULL;
ALTER TABLE queue_standard_template ALTER COLUMN STANDARD_TEMPLATE_ID SET NOT NULL;
ALTER TABLE queue_standard_template ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE queue_standard_template ALTER COLUMN CREATE_BY SET NOT NULL;
ALTER TABLE queue_standard_template ALTER COLUMN CHANGE_TIME SET NOT NULL;
ALTER TABLE queue_standard_template ALTER COLUMN CHANGE_BY SET NOT NULL;


CREATE TABLE roles (
	id integer NOT NULL,
	name varchar(200) NOT NULL,
	comments varchar(250),
	valid_id smallint NOT NULL,
	create_time timestamp NOT NULL,
	create_by integer NOT NULL,
	change_time timestamp NOT NULL,
	change_by integer NOT NULL
) ;
ALTER  TABLE roles OWNER TO otrs;
CREATE INDEX roles_change_by ON roles (change_by);
CREATE INDEX roles_create_by ON roles (create_by);
CREATE INDEX roles_valid_id ON roles (valid_id);
ALTER TABLE roles ADD PRIMARY KEY (id);
ALTER TABLE roles ADD UNIQUE (name);
ALTER TABLE roles ALTER COLUMN ID SET NOT NULL;
ALTER TABLE roles ALTER COLUMN NAME SET NOT NULL;
ALTER TABLE roles ALTER COLUMN VALID_ID SET NOT NULL;
ALTER TABLE roles ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE roles ALTER COLUMN CREATE_BY SET NOT NULL;
ALTER TABLE roles ALTER COLUMN CHANGE_TIME SET NOT NULL;
ALTER TABLE roles ALTER COLUMN CHANGE_BY SET NOT NULL;


CREATE TABLE role_user (
	user_id integer NOT NULL,
	role_id integer NOT NULL,
	create_time timestamp NOT NULL,
	create_by integer NOT NULL,
	change_time timestamp NOT NULL,
	change_by integer NOT NULL
) ;
ALTER  TABLE role_user OWNER TO otrs;
CREATE INDEX role_user_change_by ON role_user (change_by);
CREATE INDEX role_user_create_by ON role_user (create_by);
CREATE INDEX role_user_role_id ON role_user (role_id);
CREATE INDEX role_user_user_id ON role_user (user_id);
ALTER TABLE role_user ALTER COLUMN USER_ID SET NOT NULL;
ALTER TABLE role_user ALTER COLUMN ROLE_ID SET NOT NULL;
ALTER TABLE role_user ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE role_user ALTER COLUMN CREATE_BY SET NOT NULL;
ALTER TABLE role_user ALTER COLUMN CHANGE_TIME SET NOT NULL;
ALTER TABLE role_user ALTER COLUMN CHANGE_BY SET NOT NULL;


CREATE TABLE salutation (
	id smallint NOT NULL,
	name varchar(200) NOT NULL,
	text varchar(3000) NOT NULL,
	content_type varchar(250),
	comments varchar(250),
	valid_id smallint NOT NULL,
	create_time timestamp NOT NULL,
	create_by integer NOT NULL,
	change_time timestamp NOT NULL,
	change_by integer NOT NULL
) ;
ALTER  TABLE salutation OWNER TO otrs;
CREATE INDEX salutation_change_by ON salutation (change_by);
CREATE INDEX salutation_create_by ON salutation (create_by);
CREATE INDEX salutation_valid_id ON salutation (valid_id);
ALTER TABLE salutation ADD PRIMARY KEY (id);
ALTER TABLE salutation ADD UNIQUE (name);
ALTER TABLE salutation ALTER COLUMN ID SET NOT NULL;
ALTER TABLE salutation ALTER COLUMN NAME SET NOT NULL;
ALTER TABLE salutation ALTER COLUMN TEXT SET NOT NULL;
ALTER TABLE salutation ALTER COLUMN VALID_ID SET NOT NULL;
ALTER TABLE salutation ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE salutation ALTER COLUMN CREATE_BY SET NOT NULL;
ALTER TABLE salutation ALTER COLUMN CHANGE_TIME SET NOT NULL;
ALTER TABLE salutation ALTER COLUMN CHANGE_BY SET NOT NULL;


CREATE TABLE scheduler_future_task (
	id bigint NOT NULL,
	ident bigint NOT NULL,
	execution_time timestamp NOT NULL,
	name varchar(150),
	task_type varchar(150) NOT NULL,
	task_data text NOT NULL,
	attempts smallint NOT NULL,
	lock_key bigint NOT NULL,
	lock_time timestamp,
	create_time timestamp NOT NULL
) ;
ALTER  TABLE scheduler_future_task OWNER TO otrs;
CREATE INDEX scheduler_future_task_ident_id ON scheduler_future_task (ident, id);
CREATE INDEX scheduler_future_task_lock_key_id ON scheduler_future_task (lock_key, id);
ALTER TABLE scheduler_future_task ADD UNIQUE (ident);
ALTER TABLE scheduler_future_task ADD PRIMARY KEY (id);
ALTER TABLE scheduler_future_task ALTER COLUMN ID SET NOT NULL;
ALTER TABLE scheduler_future_task ALTER COLUMN IDENT SET NOT NULL;
ALTER TABLE scheduler_future_task ALTER COLUMN EXECUTION_TIME SET NOT NULL;
ALTER TABLE scheduler_future_task ALTER COLUMN TASK_TYPE SET NOT NULL;
ALTER TABLE scheduler_future_task ALTER COLUMN TASK_DATA SET NOT NULL;
ALTER TABLE scheduler_future_task ALTER COLUMN ATTEMPTS SET NOT NULL;
ALTER TABLE scheduler_future_task ALTER COLUMN LOCK_KEY SET NOT NULL;
ALTER TABLE scheduler_future_task ALTER COLUMN CREATE_TIME SET NOT NULL;


CREATE TABLE scheduler_recurrent_task (
	id bigint NOT NULL,
	name varchar(150) NOT NULL,
	task_type varchar(150) NOT NULL,
	last_execution_time timestamp NOT NULL,
	last_worker_task_id bigint,
	last_worker_status smallint,
	last_worker_running_time integer,
	lock_key bigint NOT NULL,
	lock_time timestamp,
	create_time timestamp NOT NULL,
	change_time timestamp NOT NULL
) ;
ALTER  TABLE scheduler_recurrent_task OWNER TO otrs;
CREATE INDEX scheduler_recurrent_task_lock_key_id ON scheduler_recurrent_task (lock_key, id);
CREATE INDEX scheduler_recurrent_task_task_type_name ON scheduler_recurrent_task (task_type, name);
ALTER TABLE scheduler_recurrent_task ADD PRIMARY KEY (id);
ALTER TABLE scheduler_recurrent_task ADD UNIQUE (name,task_type);
ALTER TABLE scheduler_recurrent_task ALTER COLUMN ID SET NOT NULL;
ALTER TABLE scheduler_recurrent_task ALTER COLUMN NAME SET NOT NULL;
ALTER TABLE scheduler_recurrent_task ALTER COLUMN TASK_TYPE SET NOT NULL;
ALTER TABLE scheduler_recurrent_task ALTER COLUMN LAST_EXECUTION_TIME SET NOT NULL;
ALTER TABLE scheduler_recurrent_task ALTER COLUMN LOCK_KEY SET NOT NULL;
ALTER TABLE scheduler_recurrent_task ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE scheduler_recurrent_task ALTER COLUMN CHANGE_TIME SET NOT NULL;


CREATE TABLE scheduler_task (
	id bigint NOT NULL,
	ident bigint NOT NULL,
	name varchar(150),
	task_type varchar(150) NOT NULL,
	task_data text NOT NULL,
	attempts smallint NOT NULL,
	lock_key bigint NOT NULL,
	lock_time timestamp,
	lock_update_time timestamp,
	create_time timestamp NOT NULL
) ;
ALTER  TABLE scheduler_task OWNER TO otrs;
CREATE INDEX scheduler_task_ident_id ON scheduler_task (ident, id);
CREATE INDEX scheduler_task_lock_key_id ON scheduler_task (lock_key, id);
ALTER TABLE scheduler_task ADD PRIMARY KEY (id);
ALTER TABLE scheduler_task ADD UNIQUE (ident);
ALTER TABLE scheduler_task ALTER COLUMN ID SET NOT NULL;
ALTER TABLE scheduler_task ALTER COLUMN IDENT SET NOT NULL;
ALTER TABLE scheduler_task ALTER COLUMN TASK_TYPE SET NOT NULL;
ALTER TABLE scheduler_task ALTER COLUMN TASK_DATA SET NOT NULL;
ALTER TABLE scheduler_task ALTER COLUMN ATTEMPTS SET NOT NULL;
ALTER TABLE scheduler_task ALTER COLUMN LOCK_KEY SET NOT NULL;
ALTER TABLE scheduler_task ALTER COLUMN CREATE_TIME SET NOT NULL;


CREATE TABLE search_profile (
	login varchar(200) NOT NULL,
	profile_name varchar(200) NOT NULL,
	profile_type varchar(30) NOT NULL,
	profile_key varchar(200) NOT NULL,
	profile_value varchar(200)
) ;
ALTER  TABLE search_profile OWNER TO otrs;
CREATE INDEX search_profile_login ON search_profile (login);
CREATE INDEX search_profile_profile_name ON search_profile (profile_name);
ALTER TABLE search_profile ALTER COLUMN LOGIN SET NOT NULL;
ALTER TABLE search_profile ALTER COLUMN PROFILE_NAME SET NOT NULL;
ALTER TABLE search_profile ALTER COLUMN PROFILE_TYPE SET NOT NULL;
ALTER TABLE search_profile ALTER COLUMN PROFILE_KEY SET NOT NULL;


CREATE TABLE service (
	id integer NOT NULL,
	name varchar(200) NOT NULL,
	valid_id smallint NOT NULL,
	comments varchar(250),
	create_time timestamp NOT NULL,
	create_by integer NOT NULL,
	change_time timestamp NOT NULL,
	change_by integer NOT NULL,
	type_id integer,
	criticality varchar(200)
) ;
ALTER  TABLE service OWNER TO otrs;
CREATE INDEX service_change_by ON service (change_by);
CREATE INDEX service_create_by ON service (create_by);
ALTER TABLE service ADD PRIMARY KEY (id);
ALTER TABLE service ADD UNIQUE (name);
ALTER TABLE service ALTER COLUMN ID SET NOT NULL;
ALTER TABLE service ALTER COLUMN NAME SET NOT NULL;
ALTER TABLE service ALTER COLUMN VALID_ID SET NOT NULL;
ALTER TABLE service ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE service ALTER COLUMN CREATE_BY SET NOT NULL;
ALTER TABLE service ALTER COLUMN CHANGE_TIME SET NOT NULL;
ALTER TABLE service ALTER COLUMN CHANGE_BY SET NOT NULL;


CREATE TABLE service_customer_user (
	customer_user_login varchar(200) NOT NULL,
	service_id integer NOT NULL,
	create_time timestamp NOT NULL,
	create_by integer NOT NULL
) ;
ALTER  TABLE service_customer_user OWNER TO otrs;
CREATE INDEX service_customer_user_create_by ON service_customer_user (create_by);
CREATE INDEX service_customer_user_customer_user_login ON service_customer_user (customer_user_login);
CREATE INDEX service_customer_user_service_id ON service_customer_user (service_id);
ALTER TABLE service_customer_user ALTER COLUMN CUSTOMER_USER_LOGIN SET NOT NULL;
ALTER TABLE service_customer_user ALTER COLUMN SERVICE_ID SET NOT NULL;
ALTER TABLE service_customer_user ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE service_customer_user ALTER COLUMN CREATE_BY SET NOT NULL;


CREATE TABLE service_preferences (
	service_id integer NOT NULL,
	preferences_key varchar(150) NOT NULL,
	preferences_value varchar(250)
) ;
ALTER  TABLE service_preferences OWNER TO otrs;
CREATE INDEX service_preferences_service_id ON service_preferences (service_id);
ALTER TABLE service_preferences ALTER COLUMN SERVICE_ID SET NOT NULL;
ALTER TABLE service_preferences ALTER COLUMN PREFERENCES_KEY SET NOT NULL;


CREATE TABLE service_sla (
	service_id integer NOT NULL,
	sla_id integer NOT NULL
) ;
ALTER  TABLE service_sla OWNER TO otrs;
CREATE INDEX service_sla_service_id ON service_sla (service_id);
CREATE INDEX service_sla_sla_id ON service_sla (sla_id);
ALTER TABLE service_sla ADD UNIQUE (service_id,sla_id);
ALTER TABLE service_sla ALTER COLUMN SERVICE_ID SET NOT NULL;
ALTER TABLE service_sla ALTER COLUMN SLA_ID SET NOT NULL;


CREATE TABLE sessions (
	id bigint NOT NULL,
	session_id varchar(100) NOT NULL,
	data_key varchar(100) NOT NULL,
	data_value text,
	serialized smallint NOT NULL
) ;
ALTER  TABLE sessions OWNER TO otrs;
CREATE INDEX sessions_data_key ON sessions (data_key);
CREATE INDEX sessions_session_id_data_key_id ON sessions (session_id, data_key, id);
ALTER TABLE sessions ADD PRIMARY KEY (id);
ALTER TABLE sessions ALTER COLUMN ID SET NOT NULL;
ALTER TABLE sessions ALTER COLUMN SESSION_ID SET NOT NULL;
ALTER TABLE sessions ALTER COLUMN DATA_KEY SET NOT NULL;
ALTER TABLE sessions ALTER COLUMN SERIALIZED SET NOT NULL;


CREATE TABLE signature (
	id smallint NOT NULL,
	name varchar(200) NOT NULL,
	text varchar(3000) NOT NULL,
	content_type varchar(250),
	comments varchar(250),
	valid_id smallint NOT NULL,
	create_time timestamp NOT NULL,
	create_by integer NOT NULL,
	change_time timestamp NOT NULL,
	change_by integer NOT NULL
) ;
ALTER  TABLE signature OWNER TO otrs;
CREATE INDEX signature_change_by ON signature (change_by);
CREATE INDEX signature_create_by ON signature (create_by);
CREATE INDEX signature_valid_id ON signature (valid_id);
ALTER TABLE signature ADD PRIMARY KEY (id);
ALTER TABLE signature ADD UNIQUE (name);
ALTER TABLE signature ALTER COLUMN ID SET NOT NULL;
ALTER TABLE signature ALTER COLUMN NAME SET NOT NULL;
ALTER TABLE signature ALTER COLUMN TEXT SET NOT NULL;
ALTER TABLE signature ALTER COLUMN VALID_ID SET NOT NULL;
ALTER TABLE signature ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE signature ALTER COLUMN CREATE_BY SET NOT NULL;
ALTER TABLE signature ALTER COLUMN CHANGE_TIME SET NOT NULL;
ALTER TABLE signature ALTER COLUMN CHANGE_BY SET NOT NULL;


CREATE TABLE sla (
	id integer NOT NULL,
	name varchar(200) NOT NULL,
	calendar_name varchar(100),
	first_response_time integer NOT NULL,
	first_response_notify smallint,
	update_time integer NOT NULL,
	update_notify smallint,
	solution_time integer NOT NULL,
	solution_notify smallint,
	valid_id smallint NOT NULL,
	comments varchar(250),
	create_time timestamp NOT NULL,
	create_by integer NOT NULL,
	change_time timestamp NOT NULL,
	change_by integer NOT NULL,
	type_id integer,
	min_time_bet_incidents integer
) ;
ALTER  TABLE sla OWNER TO otrs;
CREATE INDEX sla_change_by ON sla (change_by);
CREATE INDEX sla_create_by ON sla (create_by);
ALTER TABLE sla ADD PRIMARY KEY (id);
ALTER TABLE sla ADD UNIQUE (name);
ALTER TABLE sla ALTER COLUMN ID SET NOT NULL;
ALTER TABLE sla ALTER COLUMN NAME SET NOT NULL;
ALTER TABLE sla ALTER COLUMN FIRST_RESPONSE_TIME SET NOT NULL;
ALTER TABLE sla ALTER COLUMN UPDATE_TIME SET NOT NULL;
ALTER TABLE sla ALTER COLUMN SOLUTION_TIME SET NOT NULL;
ALTER TABLE sla ALTER COLUMN VALID_ID SET NOT NULL;
ALTER TABLE sla ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE sla ALTER COLUMN CREATE_BY SET NOT NULL;
ALTER TABLE sla ALTER COLUMN CHANGE_TIME SET NOT NULL;
ALTER TABLE sla ALTER COLUMN CHANGE_BY SET NOT NULL;


CREATE TABLE sla_preferences (
	sla_id integer NOT NULL,
	preferences_key varchar(150) NOT NULL,
	preferences_value varchar(250)
) ;
ALTER  TABLE sla_preferences OWNER TO otrs;
CREATE INDEX sla_preferences_sla_id ON sla_preferences (sla_id);
ALTER TABLE sla_preferences ALTER COLUMN SLA_ID SET NOT NULL;
ALTER TABLE sla_preferences ALTER COLUMN PREFERENCES_KEY SET NOT NULL;


CREATE TABLE smime_signer_cert_relations (
	id integer NOT NULL,
	cert_hash varchar(8) NOT NULL,
	cert_fingerprint varchar(59) NOT NULL,
	ca_hash varchar(8) NOT NULL,
	ca_fingerprint varchar(59) NOT NULL,
	create_time timestamp NOT NULL,
	create_by integer NOT NULL,
	change_time timestamp NOT NULL,
	change_by integer NOT NULL
) ;
ALTER  TABLE smime_signer_cert_relations OWNER TO otrs;
CREATE INDEX smime_signer_cert_relations_change_by ON smime_signer_cert_relations (change_by);
CREATE INDEX smime_signer_cert_relations_create_by ON smime_signer_cert_relations (create_by);
ALTER TABLE smime_signer_cert_relations ADD PRIMARY KEY (id);
ALTER TABLE smime_signer_cert_relations ALTER COLUMN ID SET NOT NULL;
ALTER TABLE smime_signer_cert_relations ALTER COLUMN CERT_HASH SET NOT NULL;
ALTER TABLE smime_signer_cert_relations ALTER COLUMN CERT_FINGERPRINT SET NOT NULL;
ALTER TABLE smime_signer_cert_relations ALTER COLUMN CA_HASH SET NOT NULL;
ALTER TABLE smime_signer_cert_relations ALTER COLUMN CA_FINGERPRINT SET NOT NULL;
ALTER TABLE smime_signer_cert_relations ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE smime_signer_cert_relations ALTER COLUMN CREATE_BY SET NOT NULL;
ALTER TABLE smime_signer_cert_relations ALTER COLUMN CHANGE_TIME SET NOT NULL;
ALTER TABLE smime_signer_cert_relations ALTER COLUMN CHANGE_BY SET NOT NULL;


CREATE TABLE standard_attachment (
	id integer NOT NULL,
	name varchar(200) NOT NULL,
	content_type varchar(250) NOT NULL,
	content text NOT NULL,
	filename varchar(250) NOT NULL,
	comments varchar(250),
	valid_id smallint NOT NULL,
	create_time timestamp NOT NULL,
	create_by integer NOT NULL,
	change_time timestamp NOT NULL,
	change_by integer NOT NULL
) ;
ALTER  TABLE standard_attachment OWNER TO otrs;
CREATE INDEX standard_attachment_change_by ON standard_attachment (change_by);
CREATE INDEX standard_attachment_create_by ON standard_attachment (create_by);
CREATE INDEX standard_attachment_valid_id ON standard_attachment (valid_id);
ALTER TABLE standard_attachment ADD UNIQUE (name);
ALTER TABLE standard_attachment ADD PRIMARY KEY (id);
ALTER TABLE standard_attachment ALTER COLUMN ID SET NOT NULL;
ALTER TABLE standard_attachment ALTER COLUMN NAME SET NOT NULL;
ALTER TABLE standard_attachment ALTER COLUMN CONTENT_TYPE SET NOT NULL;
ALTER TABLE standard_attachment ALTER COLUMN CONTENT SET NOT NULL;
ALTER TABLE standard_attachment ALTER COLUMN FILENAME SET NOT NULL;
ALTER TABLE standard_attachment ALTER COLUMN VALID_ID SET NOT NULL;
ALTER TABLE standard_attachment ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE standard_attachment ALTER COLUMN CREATE_BY SET NOT NULL;
ALTER TABLE standard_attachment ALTER COLUMN CHANGE_TIME SET NOT NULL;
ALTER TABLE standard_attachment ALTER COLUMN CHANGE_BY SET NOT NULL;


CREATE TABLE standard_template (
	id integer NOT NULL,
	name varchar(200) NOT NULL,
	text text,
	content_type varchar(250),
	template_type varchar(100) NOT NULL DEFAULT 'Answer',
	comments varchar(250),
	valid_id smallint NOT NULL,
	create_time timestamp NOT NULL,
	create_by integer NOT NULL,
	change_time timestamp NOT NULL,
	change_by integer NOT NULL
) ;
ALTER  TABLE standard_template OWNER TO otrs;
CREATE INDEX standard_template_change_by ON standard_template (change_by);
CREATE INDEX standard_template_create_by ON standard_template (create_by);
CREATE INDEX standard_template_valid_id ON standard_template (valid_id);
ALTER TABLE standard_template ADD PRIMARY KEY (id);
ALTER TABLE standard_template ADD UNIQUE (name);
ALTER TABLE standard_template ALTER COLUMN ID SET NOT NULL;
ALTER TABLE standard_template ALTER COLUMN NAME SET NOT NULL;
ALTER TABLE standard_template ALTER COLUMN TEMPLATE_TYPE SET NOT NULL;
ALTER TABLE standard_template ALTER COLUMN VALID_ID SET NOT NULL;
ALTER TABLE standard_template ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE standard_template ALTER COLUMN CREATE_BY SET NOT NULL;
ALTER TABLE standard_template ALTER COLUMN CHANGE_TIME SET NOT NULL;
ALTER TABLE standard_template ALTER COLUMN CHANGE_BY SET NOT NULL;


CREATE TABLE standard_templatex (
	template_id integer NOT NULL,
	t_to varchar(3800),
	t_cc varchar(3800),
	t_bcc varchar(3800),
	t_ticket_state_id smallint,
	t_pending_time integer,
	t_pending_type integer
) ;
ALTER  TABLE standard_templatex OWNER TO otrs;
ALTER TABLE standard_templatex ADD PRIMARY KEY (template_id);
ALTER TABLE standard_templatex ALTER COLUMN TEMPLATE_ID SET NOT NULL;


CREATE TABLE standard_template_attachment (
	id integer NOT NULL,
	standard_attachment_id integer NOT NULL,
	standard_template_id integer NOT NULL,
	create_time timestamp NOT NULL,
	create_by integer NOT NULL,
	change_time timestamp NOT NULL,
	change_by integer NOT NULL
) ;
ALTER  TABLE standard_template_attachment OWNER TO otrs;
CREATE INDEX standard_template_attachment_standard_template_id ON standard_template_attachment (standard_template_id);
CREATE INDEX standard_template_attachment_standard_attachment_id ON standard_template_attachment (standard_attachment_id);
CREATE INDEX standard_template_attachment_create_by ON standard_template_attachment (create_by);
CREATE INDEX standard_template_attachment_change_by ON standard_template_attachment (change_by);
ALTER TABLE standard_template_attachment ADD PRIMARY KEY (id);
ALTER TABLE standard_template_attachment ALTER COLUMN ID SET NOT NULL;
ALTER TABLE standard_template_attachment ALTER COLUMN STANDARD_ATTACHMENT_ID SET NOT NULL;
ALTER TABLE standard_template_attachment ALTER COLUMN STANDARD_TEMPLATE_ID SET NOT NULL;
ALTER TABLE standard_template_attachment ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE standard_template_attachment ALTER COLUMN CREATE_BY SET NOT NULL;
ALTER TABLE standard_template_attachment ALTER COLUMN CHANGE_TIME SET NOT NULL;
ALTER TABLE standard_template_attachment ALTER COLUMN CHANGE_BY SET NOT NULL;


CREATE TABLE survey (
	id bigint NOT NULL,
	surveynumber varchar(50),
	title varchar(250),
	introduction varchar(1000),
	description varchar(1000),
	notification_sender varchar(250),
	notification_subject varchar(250),
	notification_body varchar(2000),
	status varchar(50),
	send_conditions varchar(2000),
	create_time timestamp,
	create_by integer,
	change_time timestamp,
	change_by integer
) ;
ALTER  TABLE survey OWNER TO otrs;
ALTER TABLE survey ADD PRIMARY KEY (id);
ALTER TABLE survey ALTER COLUMN ID SET NOT NULL;


CREATE TABLE survey_answer (
	id bigint NOT NULL,
	question_id bigint NOT NULL,
	answer varchar(250) NOT NULL,
	position integer NOT NULL,
	create_time timestamp,
	create_by integer,
	change_time timestamp,
	change_by integer
) ;
ALTER  TABLE survey_answer OWNER TO otrs;
CREATE INDEX survey_answer_question_id ON survey_answer (question_id);
ALTER TABLE survey_answer ADD PRIMARY KEY (id);
ALTER TABLE survey_answer ALTER COLUMN ID SET NOT NULL;
ALTER TABLE survey_answer ALTER COLUMN QUESTION_ID SET NOT NULL;
ALTER TABLE survey_answer ALTER COLUMN ANSWER SET NOT NULL;
ALTER TABLE survey_answer ALTER COLUMN POSITION SET NOT NULL;


CREATE TABLE survey_question (
	id bigint NOT NULL,
	survey_id bigint NOT NULL,
	question varchar(250) NOT NULL,
	question_type varchar(50) NOT NULL,
	position smallint NOT NULL,
	answer_required smallint,
	create_time timestamp,
	create_by integer,
	change_time timestamp,
	change_by integer
) ;
ALTER  TABLE survey_question OWNER TO otrs;
CREATE INDEX survey_question_survey_id ON survey_question (survey_id);
ALTER TABLE survey_question ADD PRIMARY KEY (id);
ALTER TABLE survey_question ALTER COLUMN ID SET NOT NULL;
ALTER TABLE survey_question ALTER COLUMN SURVEY_ID SET NOT NULL;
ALTER TABLE survey_question ALTER COLUMN QUESTION SET NOT NULL;
ALTER TABLE survey_question ALTER COLUMN QUESTION_TYPE SET NOT NULL;
ALTER TABLE survey_question ALTER COLUMN POSITION SET NOT NULL;


CREATE TABLE survey_queue (
	survey_id bigint NOT NULL,
	queue_id integer NOT NULL
) ;
ALTER  TABLE survey_queue OWNER TO otrs;
CREATE INDEX survey_queue_queue_id ON survey_queue (queue_id);
CREATE INDEX survey_queue_survey_id ON survey_queue (survey_id);
ALTER TABLE survey_queue ADD UNIQUE (survey_id,queue_id);
ALTER TABLE survey_queue ALTER COLUMN SURVEY_ID SET NOT NULL;
ALTER TABLE survey_queue ALTER COLUMN QUEUE_ID SET NOT NULL;


CREATE TABLE survey_request (
	id bigint NOT NULL,
	ticket_id bigint NOT NULL,
	survey_id bigint NOT NULL,
	valid_id smallint NOT NULL,
	public_survey_key varchar(250) NOT NULL,
	send_to varchar(250) NOT NULL,
	send_time timestamp,
	vote_time timestamp,
	create_time timestamp
) ;
ALTER  TABLE survey_request OWNER TO otrs;
CREATE INDEX survey_request_survey_id ON survey_request (survey_id);
CREATE INDEX survey_request_ticket_id ON survey_request (ticket_id);
CREATE INDEX survey_request_valid_id ON survey_request (valid_id);
ALTER TABLE survey_request ADD PRIMARY KEY (id);
ALTER TABLE survey_request ALTER COLUMN ID SET NOT NULL;
ALTER TABLE survey_request ALTER COLUMN TICKET_ID SET NOT NULL;
ALTER TABLE survey_request ALTER COLUMN SURVEY_ID SET NOT NULL;
ALTER TABLE survey_request ALTER COLUMN VALID_ID SET NOT NULL;
ALTER TABLE survey_request ALTER COLUMN PUBLIC_SURVEY_KEY SET NOT NULL;
ALTER TABLE survey_request ALTER COLUMN SEND_TO SET NOT NULL;


CREATE TABLE survey_vote (
	id bigint NOT NULL,
	request_id bigint NOT NULL,
	question_id bigint NOT NULL,
	vote_value varchar(1000) NOT NULL,
	create_time timestamp
) ;
ALTER  TABLE survey_vote OWNER TO otrs;
CREATE INDEX survey_vote_question_id ON survey_vote (question_id);
CREATE INDEX survey_vote_request_id ON survey_vote (request_id);
ALTER TABLE survey_vote ADD PRIMARY KEY (id);
ALTER TABLE survey_vote ALTER COLUMN ID SET NOT NULL;
ALTER TABLE survey_vote ALTER COLUMN REQUEST_ID SET NOT NULL;
ALTER TABLE survey_vote ALTER COLUMN QUESTION_ID SET NOT NULL;
ALTER TABLE survey_vote ALTER COLUMN VOTE_VALUE SET NOT NULL;


CREATE TABLE system_address (
	id smallint NOT NULL,
	value0 varchar(200) NOT NULL,
	value1 varchar(200) NOT NULL,
	value2 varchar(200),
	value3 varchar(200),
	queue_id integer NOT NULL,
	comments varchar(250),
	valid_id smallint NOT NULL,
	create_time timestamp NOT NULL,
	create_by integer NOT NULL,
	change_time timestamp NOT NULL,
	change_by integer NOT NULL
) ;
ALTER  TABLE system_address OWNER TO otrs;
CREATE INDEX system_address_change_by ON system_address (change_by);
CREATE INDEX system_address_create_by ON system_address (create_by);
CREATE INDEX system_address_valid_id ON system_address (valid_id);
ALTER TABLE system_address ADD PRIMARY KEY (id);
ALTER TABLE system_address ALTER COLUMN ID SET NOT NULL;
ALTER TABLE system_address ALTER COLUMN VALUE0 SET NOT NULL;
ALTER TABLE system_address ALTER COLUMN VALUE1 SET NOT NULL;
ALTER TABLE system_address ALTER COLUMN QUEUE_ID SET NOT NULL;
ALTER TABLE system_address ALTER COLUMN VALID_ID SET NOT NULL;
ALTER TABLE system_address ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE system_address ALTER COLUMN CREATE_BY SET NOT NULL;
ALTER TABLE system_address ALTER COLUMN CHANGE_TIME SET NOT NULL;
ALTER TABLE system_address ALTER COLUMN CHANGE_BY SET NOT NULL;


CREATE TABLE system_data (
	data_key varchar(160) NOT NULL,
	data_value text,
	create_time timestamp NOT NULL,
	create_by integer NOT NULL,
	change_time timestamp NOT NULL,
	change_by integer NOT NULL
) ;
ALTER  TABLE system_data OWNER TO otrs;
CREATE INDEX system_data_change_by ON system_data (change_by);
CREATE INDEX system_data_create_by ON system_data (create_by);
ALTER TABLE system_data ADD PRIMARY KEY (data_key);
ALTER TABLE system_data ALTER COLUMN DATA_KEY SET NOT NULL;
ALTER TABLE system_data ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE system_data ALTER COLUMN CREATE_BY SET NOT NULL;
ALTER TABLE system_data ALTER COLUMN CHANGE_TIME SET NOT NULL;
ALTER TABLE system_data ALTER COLUMN CHANGE_BY SET NOT NULL;


CREATE TABLE system_maintenance (
	id integer NOT NULL,
	start_date integer NOT NULL,
	stop_date integer NOT NULL,
	comments varchar(250) NOT NULL,
	login_message varchar(250),
	show_login_message smallint,
	notify_message varchar(250),
	valid_id smallint NOT NULL,
	create_time timestamp NOT NULL,
	create_by integer NOT NULL,
	change_time timestamp NOT NULL,
	change_by integer NOT NULL
) ;
ALTER  TABLE system_maintenance OWNER TO otrs;
CREATE INDEX system_maintenance_change_by ON system_maintenance (change_by);
CREATE INDEX system_maintenance_create_by ON system_maintenance (create_by);
CREATE INDEX system_maintenance_valid_id ON system_maintenance (valid_id);
ALTER TABLE system_maintenance ADD PRIMARY KEY (id);
ALTER TABLE system_maintenance ALTER COLUMN ID SET NOT NULL;
ALTER TABLE system_maintenance ALTER COLUMN START_DATE SET NOT NULL;
ALTER TABLE system_maintenance ALTER COLUMN STOP_DATE SET NOT NULL;
ALTER TABLE system_maintenance ALTER COLUMN COMMENTS SET NOT NULL;
ALTER TABLE system_maintenance ALTER COLUMN VALID_ID SET NOT NULL;
ALTER TABLE system_maintenance ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE system_maintenance ALTER COLUMN CREATE_BY SET NOT NULL;
ALTER TABLE system_maintenance ALTER COLUMN CHANGE_TIME SET NOT NULL;
ALTER TABLE system_maintenance ALTER COLUMN CHANGE_BY SET NOT NULL;


CREATE TABLE ticket (
	id bigint NOT NULL,
	tn varchar(50) NOT NULL,
	title varchar(255),
	queue_id integer NOT NULL,
	ticket_lock_id smallint NOT NULL,
	type_id smallint,
	service_id integer,
	sla_id integer,
	user_id integer NOT NULL,
	responsible_user_id integer NOT NULL,
	ticket_priority_id smallint NOT NULL,
	ticket_state_id smallint NOT NULL,
	customer_id varchar(150),
	customer_user_id varchar(250),
	timeout integer NOT NULL,
	until_time integer NOT NULL,
	escalation_time integer NOT NULL,
	escalation_update_time integer NOT NULL,
	escalation_response_time integer NOT NULL,
	escalation_solution_time integer NOT NULL,
	archive_flag smallint NOT NULL DEFAULT 0,
	create_time_unix bigint NOT NULL,
	create_time timestamp NOT NULL,
	create_by integer NOT NULL,
	change_time timestamp NOT NULL,
	change_by integer NOT NULL
) ;
ALTER  TABLE ticket OWNER TO otrs;
CREATE INDEX ticket_change_by ON ticket (change_by);
CREATE INDEX ticket_create_by ON ticket (create_by);
CREATE INDEX ticket_service_id ON ticket (service_id);
CREATE INDEX ticket_sla_id ON ticket (sla_id);
CREATE INDEX ticket_archive_flag ON ticket (archive_flag);
CREATE INDEX ticket_create_time ON ticket (create_time);
CREATE INDEX ticket_create_time_unix ON ticket (create_time_unix);
CREATE INDEX ticket_customer_id ON ticket (customer_id);
CREATE INDEX ticket_customer_user_id ON ticket (customer_user_id);
CREATE INDEX ticket_escalation_response_time ON ticket (escalation_response_time);
CREATE INDEX ticket_escalation_solution_time ON ticket (escalation_solution_time);
CREATE INDEX ticket_escalation_time ON ticket (escalation_time);
CREATE INDEX ticket_escalation_update_time ON ticket (escalation_update_time);
CREATE INDEX ticket_queue_id ON ticket (queue_id);
CREATE INDEX ticket_ticket_state_id_ticket_lock_id ON ticket (ticket_state_id, ticket_lock_id);
CREATE INDEX ticket_responsible_user_id ON ticket (responsible_user_id);
CREATE INDEX ticket_ticket_lock_id ON ticket (ticket_lock_id);
CREATE INDEX ticket_ticket_priority_id ON ticket (ticket_priority_id);
CREATE INDEX ticket_ticket_state_id ON ticket (ticket_state_id);
CREATE INDEX ticket_timeout ON ticket (timeout);
CREATE INDEX ticket_title ON ticket (title);
CREATE INDEX ticket_type_id ON ticket (type_id);
CREATE INDEX ticket_until_time ON ticket (until_time);
CREATE INDEX ticket_user_id ON ticket (user_id);
ALTER TABLE ticket ADD PRIMARY KEY (id);
ALTER TABLE ticket ADD UNIQUE (tn);
ALTER TABLE ticket ALTER COLUMN ID SET NOT NULL;
ALTER TABLE ticket ALTER COLUMN TN SET NOT NULL;
ALTER TABLE ticket ALTER COLUMN QUEUE_ID SET NOT NULL;
ALTER TABLE ticket ALTER COLUMN TICKET_LOCK_ID SET NOT NULL;
ALTER TABLE ticket ALTER COLUMN USER_ID SET NOT NULL;
ALTER TABLE ticket ALTER COLUMN RESPONSIBLE_USER_ID SET NOT NULL;
ALTER TABLE ticket ALTER COLUMN TICKET_PRIORITY_ID SET NOT NULL;
ALTER TABLE ticket ALTER COLUMN TICKET_STATE_ID SET NOT NULL;
ALTER TABLE ticket ALTER COLUMN TIMEOUT SET NOT NULL;
ALTER TABLE ticket ALTER COLUMN UNTIL_TIME SET NOT NULL;
ALTER TABLE ticket ALTER COLUMN ESCALATION_TIME SET NOT NULL;
ALTER TABLE ticket ALTER COLUMN ESCALATION_UPDATE_TIME SET NOT NULL;
ALTER TABLE ticket ALTER COLUMN ESCALATION_RESPONSE_TIME SET NOT NULL;
ALTER TABLE ticket ALTER COLUMN ESCALATION_SOLUTION_TIME SET NOT NULL;
ALTER TABLE ticket ALTER COLUMN ARCHIVE_FLAG SET NOT NULL;
ALTER TABLE ticket ALTER COLUMN CREATE_TIME_UNIX SET NOT NULL;
ALTER TABLE ticket ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE ticket ALTER COLUMN CREATE_BY SET NOT NULL;
ALTER TABLE ticket ALTER COLUMN CHANGE_TIME SET NOT NULL;
ALTER TABLE ticket ALTER COLUMN CHANGE_BY SET NOT NULL;


CREATE TABLE ticket_flag (
	ticket_id bigint NOT NULL,
	ticket_key varchar(50) NOT NULL,
	ticket_value varchar(50),
	create_time timestamp NOT NULL,
	create_by integer NOT NULL
) ;
ALTER  TABLE ticket_flag OWNER TO otrs;
CREATE INDEX ticket_flag_create_by ON ticket_flag (create_by);
CREATE INDEX ticket_flag_ticket_id ON ticket_flag (ticket_id);
CREATE INDEX ticket_flag_ticket_id_create_by ON ticket_flag (ticket_id, create_by);
CREATE INDEX ticket_flag_ticket_id_ticket_key ON ticket_flag (ticket_id, ticket_key);
ALTER TABLE ticket_flag ADD UNIQUE (ticket_id,ticket_key,create_by);
ALTER TABLE ticket_flag ALTER COLUMN TICKET_ID SET NOT NULL;
ALTER TABLE ticket_flag ALTER COLUMN TICKET_KEY SET NOT NULL;
ALTER TABLE ticket_flag ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE ticket_flag ALTER COLUMN CREATE_BY SET NOT NULL;


CREATE TABLE ticket_history (
	id bigint NOT NULL,
	name varchar(200) NOT NULL,
	history_type_id smallint NOT NULL,
	ticket_id bigint NOT NULL,
	article_id bigint,
	type_id smallint NOT NULL,
	queue_id integer NOT NULL,
	owner_id integer NOT NULL,
	priority_id smallint NOT NULL,
	state_id smallint NOT NULL,
	create_time timestamp NOT NULL,
	create_by integer NOT NULL,
	change_time timestamp NOT NULL,
	change_by integer NOT NULL
) ;
ALTER  TABLE ticket_history OWNER TO otrs;
CREATE INDEX ticket_history_article_id ON ticket_history (article_id);
CREATE INDEX ticket_history_change_by ON ticket_history (change_by);
CREATE INDEX ticket_history_create_by ON ticket_history (create_by);
CREATE INDEX ticket_history_ticket_id_create_time ON ticket_history (ticket_id, create_time);
CREATE INDEX ticket_history_history_type_id ON ticket_history (history_type_id);
CREATE INDEX ticket_history_owner_id ON ticket_history (owner_id);
CREATE INDEX ticket_history_priority_id ON ticket_history (priority_id);
CREATE INDEX ticket_history_queue_id ON ticket_history (queue_id);
CREATE INDEX ticket_history_state_id ON ticket_history (state_id);
CREATE INDEX ticket_history_ticket_id ON ticket_history (ticket_id);
CREATE INDEX ticket_history_type_id ON ticket_history (type_id);
ALTER TABLE ticket_history ADD PRIMARY KEY (id);
ALTER TABLE ticket_history ALTER COLUMN ID SET NOT NULL;
ALTER TABLE ticket_history ALTER COLUMN NAME SET NOT NULL;
ALTER TABLE ticket_history ALTER COLUMN HISTORY_TYPE_ID SET NOT NULL;
ALTER TABLE ticket_history ALTER COLUMN TICKET_ID SET NOT NULL;
ALTER TABLE ticket_history ALTER COLUMN TYPE_ID SET NOT NULL;
ALTER TABLE ticket_history ALTER COLUMN QUEUE_ID SET NOT NULL;
ALTER TABLE ticket_history ALTER COLUMN OWNER_ID SET NOT NULL;
ALTER TABLE ticket_history ALTER COLUMN PRIORITY_ID SET NOT NULL;
ALTER TABLE ticket_history ALTER COLUMN STATE_ID SET NOT NULL;
ALTER TABLE ticket_history ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE ticket_history ALTER COLUMN CREATE_BY SET NOT NULL;
ALTER TABLE ticket_history ALTER COLUMN CHANGE_TIME SET NOT NULL;
ALTER TABLE ticket_history ALTER COLUMN CHANGE_BY SET NOT NULL;


CREATE TABLE ticket_history_type (
	id smallint NOT NULL,
	name varchar(200) NOT NULL,
	comments varchar(250),
	valid_id smallint NOT NULL,
	create_time timestamp NOT NULL,
	create_by integer NOT NULL,
	change_time timestamp NOT NULL,
	change_by integer NOT NULL
) ;
ALTER  TABLE ticket_history_type OWNER TO otrs;
CREATE INDEX ticket_history_type_change_by ON ticket_history_type (change_by);
CREATE INDEX ticket_history_type_create_by ON ticket_history_type (create_by);
CREATE INDEX ticket_history_type_valid_id ON ticket_history_type (valid_id);
ALTER TABLE ticket_history_type ADD PRIMARY KEY (id);
ALTER TABLE ticket_history_type ADD UNIQUE (name);
ALTER TABLE ticket_history_type ALTER COLUMN ID SET NOT NULL;
ALTER TABLE ticket_history_type ALTER COLUMN NAME SET NOT NULL;
ALTER TABLE ticket_history_type ALTER COLUMN VALID_ID SET NOT NULL;
ALTER TABLE ticket_history_type ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE ticket_history_type ALTER COLUMN CREATE_BY SET NOT NULL;
ALTER TABLE ticket_history_type ALTER COLUMN CHANGE_TIME SET NOT NULL;
ALTER TABLE ticket_history_type ALTER COLUMN CHANGE_BY SET NOT NULL;


CREATE TABLE ticket_index (
	ticket_id bigint NOT NULL,
	queue_id integer NOT NULL,
	queue varchar(200) NOT NULL,
	group_id integer NOT NULL,
	s_lock varchar(200) NOT NULL,
	s_state varchar(200) NOT NULL,
	create_time_unix bigint NOT NULL
) ;
ALTER  TABLE ticket_index OWNER TO otrs;
CREATE INDEX ticket_index_group_id ON ticket_index (group_id);
CREATE INDEX ticket_index_queue_id ON ticket_index (queue_id);
CREATE INDEX ticket_index_ticket_id ON ticket_index (ticket_id);
ALTER TABLE ticket_index ALTER COLUMN TICKET_ID SET NOT NULL;
ALTER TABLE ticket_index ALTER COLUMN QUEUE_ID SET NOT NULL;
ALTER TABLE ticket_index ALTER COLUMN QUEUE SET NOT NULL;
ALTER TABLE ticket_index ALTER COLUMN GROUP_ID SET NOT NULL;
ALTER TABLE ticket_index ALTER COLUMN S_LOCK SET NOT NULL;
ALTER TABLE ticket_index ALTER COLUMN S_STATE SET NOT NULL;
ALTER TABLE ticket_index ALTER COLUMN CREATE_TIME_UNIX SET NOT NULL;


CREATE TABLE ticket_lock_index (
	ticket_id bigint NOT NULL
) ;
ALTER  TABLE ticket_lock_index OWNER TO otrs;
CREATE INDEX ticket_lock_index_ticket_id ON ticket_lock_index (ticket_id);
ALTER TABLE ticket_lock_index ALTER COLUMN TICKET_ID SET NOT NULL;


CREATE TABLE ticket_lock_type (
	id smallint NOT NULL,
	name varchar(200) NOT NULL,
	valid_id smallint NOT NULL,
	create_time timestamp NOT NULL,
	create_by integer NOT NULL,
	change_time timestamp NOT NULL,
	change_by integer NOT NULL
) ;
ALTER  TABLE ticket_lock_type OWNER TO otrs;
CREATE INDEX ticket_lock_type_change_by ON ticket_lock_type (change_by);
CREATE INDEX ticket_lock_type_create_by ON ticket_lock_type (create_by);
CREATE INDEX ticket_lock_type_valid_id ON ticket_lock_type (valid_id);
ALTER TABLE ticket_lock_type ADD UNIQUE (name);
ALTER TABLE ticket_lock_type ADD PRIMARY KEY (id);
ALTER TABLE ticket_lock_type ALTER COLUMN ID SET NOT NULL;
ALTER TABLE ticket_lock_type ALTER COLUMN NAME SET NOT NULL;
ALTER TABLE ticket_lock_type ALTER COLUMN VALID_ID SET NOT NULL;
ALTER TABLE ticket_lock_type ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE ticket_lock_type ALTER COLUMN CREATE_BY SET NOT NULL;
ALTER TABLE ticket_lock_type ALTER COLUMN CHANGE_TIME SET NOT NULL;
ALTER TABLE ticket_lock_type ALTER COLUMN CHANGE_BY SET NOT NULL;


CREATE TABLE ticket_loop_protection (
	sent_to varchar(250) NOT NULL,
	sent_date varchar(150) NOT NULL
) ;
ALTER  TABLE ticket_loop_protection OWNER TO otrs;
CREATE INDEX ticket_loop_protection_sent_date ON ticket_loop_protection (sent_date);
CREATE INDEX ticket_loop_protection_sent_to ON ticket_loop_protection (sent_to);
ALTER TABLE ticket_loop_protection ALTER COLUMN SENT_TO SET NOT NULL;
ALTER TABLE ticket_loop_protection ALTER COLUMN SENT_DATE SET NOT NULL;


CREATE TABLE ticket_priority (
	id smallint NOT NULL,
	name varchar(200) NOT NULL,
	valid_id smallint NOT NULL,
	create_time timestamp NOT NULL,
	create_by integer NOT NULL,
	change_time timestamp NOT NULL,
	change_by integer NOT NULL
) ;
ALTER  TABLE ticket_priority OWNER TO otrs;
CREATE INDEX ticket_priority_change_by ON ticket_priority (change_by);
CREATE INDEX ticket_priority_create_by ON ticket_priority (create_by);
ALTER TABLE ticket_priority ADD PRIMARY KEY (id);
ALTER TABLE ticket_priority ADD UNIQUE (name);
ALTER TABLE ticket_priority ALTER COLUMN ID SET NOT NULL;
ALTER TABLE ticket_priority ALTER COLUMN NAME SET NOT NULL;
ALTER TABLE ticket_priority ALTER COLUMN VALID_ID SET NOT NULL;
ALTER TABLE ticket_priority ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE ticket_priority ALTER COLUMN CREATE_BY SET NOT NULL;
ALTER TABLE ticket_priority ALTER COLUMN CHANGE_TIME SET NOT NULL;
ALTER TABLE ticket_priority ALTER COLUMN CHANGE_BY SET NOT NULL;


CREATE TABLE ticket_state (
	id smallint NOT NULL,
	name varchar(200) NOT NULL,
	comments varchar(250),
	type_id smallint NOT NULL,
	valid_id smallint NOT NULL,
	create_time timestamp NOT NULL,
	create_by integer NOT NULL,
	change_time timestamp NOT NULL,
	change_by integer NOT NULL
) ;
ALTER  TABLE ticket_state OWNER TO otrs;
CREATE INDEX ticket_state_change_by ON ticket_state (change_by);
CREATE INDEX ticket_state_create_by ON ticket_state (create_by);
CREATE INDEX ticket_state_type_id ON ticket_state (type_id);
CREATE INDEX ticket_state_valid_id ON ticket_state (valid_id);
ALTER TABLE ticket_state ADD UNIQUE (name);
ALTER TABLE ticket_state ADD PRIMARY KEY (id);
ALTER TABLE ticket_state ALTER COLUMN ID SET NOT NULL;
ALTER TABLE ticket_state ALTER COLUMN NAME SET NOT NULL;
ALTER TABLE ticket_state ALTER COLUMN TYPE_ID SET NOT NULL;
ALTER TABLE ticket_state ALTER COLUMN VALID_ID SET NOT NULL;
ALTER TABLE ticket_state ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE ticket_state ALTER COLUMN CREATE_BY SET NOT NULL;
ALTER TABLE ticket_state ALTER COLUMN CHANGE_TIME SET NOT NULL;
ALTER TABLE ticket_state ALTER COLUMN CHANGE_BY SET NOT NULL;


CREATE TABLE ticket_state_type (
	id smallint NOT NULL,
	name varchar(200) NOT NULL,
	comments varchar(250),
	create_time timestamp NOT NULL,
	create_by integer NOT NULL,
	change_time timestamp NOT NULL,
	change_by integer NOT NULL
) ;
ALTER  TABLE ticket_state_type OWNER TO otrs;
CREATE INDEX ticket_state_type_change_by ON ticket_state_type (change_by);
CREATE INDEX ticket_state_type_create_by ON ticket_state_type (create_by);
ALTER TABLE ticket_state_type ADD UNIQUE (name);
ALTER TABLE ticket_state_type ADD PRIMARY KEY (id);
ALTER TABLE ticket_state_type ALTER COLUMN ID SET NOT NULL;
ALTER TABLE ticket_state_type ALTER COLUMN NAME SET NOT NULL;
ALTER TABLE ticket_state_type ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE ticket_state_type ALTER COLUMN CREATE_BY SET NOT NULL;
ALTER TABLE ticket_state_type ALTER COLUMN CHANGE_TIME SET NOT NULL;
ALTER TABLE ticket_state_type ALTER COLUMN CHANGE_BY SET NOT NULL;


CREATE TABLE ticket_type (
	id smallint NOT NULL,
	name varchar(200) NOT NULL,
	valid_id smallint NOT NULL,
	create_time timestamp NOT NULL,
	create_by integer NOT NULL,
	change_time timestamp NOT NULL,
	change_by integer NOT NULL
) ;
ALTER  TABLE ticket_type OWNER TO otrs;
CREATE INDEX ticket_type_change_by ON ticket_type (change_by);
CREATE INDEX ticket_type_create_by ON ticket_type (create_by);
CREATE INDEX ticket_type_valid_id ON ticket_type (valid_id);
ALTER TABLE ticket_type ADD PRIMARY KEY (id);
ALTER TABLE ticket_type ADD UNIQUE (name);
ALTER TABLE ticket_type ALTER COLUMN ID SET NOT NULL;
ALTER TABLE ticket_type ALTER COLUMN NAME SET NOT NULL;
ALTER TABLE ticket_type ALTER COLUMN VALID_ID SET NOT NULL;
ALTER TABLE ticket_type ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE ticket_type ALTER COLUMN CREATE_BY SET NOT NULL;
ALTER TABLE ticket_type ALTER COLUMN CHANGE_TIME SET NOT NULL;
ALTER TABLE ticket_type ALTER COLUMN CHANGE_BY SET NOT NULL;


CREATE TABLE ticket_watcher (
	ticket_id bigint NOT NULL,
	user_id integer NOT NULL,
	create_time timestamp NOT NULL,
	create_by integer NOT NULL,
	change_time timestamp NOT NULL,
	change_by integer NOT NULL
) ;
ALTER  TABLE ticket_watcher OWNER TO otrs;
CREATE INDEX ticket_watcher_change_by ON ticket_watcher (change_by);
CREATE INDEX ticket_watcher_create_by ON ticket_watcher (create_by);
CREATE INDEX ticket_watcher_ticket_id ON ticket_watcher (ticket_id);
CREATE INDEX ticket_watcher_user_id ON ticket_watcher (user_id);
ALTER TABLE ticket_watcher ALTER COLUMN TICKET_ID SET NOT NULL;
ALTER TABLE ticket_watcher ALTER COLUMN USER_ID SET NOT NULL;
ALTER TABLE ticket_watcher ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE ticket_watcher ALTER COLUMN CREATE_BY SET NOT NULL;
ALTER TABLE ticket_watcher ALTER COLUMN CHANGE_TIME SET NOT NULL;
ALTER TABLE ticket_watcher ALTER COLUMN CHANGE_BY SET NOT NULL;


CREATE TABLE time_accounting (
	id bigint NOT NULL,
	ticket_id bigint NOT NULL,
	article_id bigint,
	time_unit double precision NOT NULL,
	create_time timestamp NOT NULL,
	create_by integer NOT NULL,
	change_time timestamp NOT NULL,
	change_by integer NOT NULL
) ;
ALTER  TABLE time_accounting OWNER TO otrs;
CREATE INDEX time_accounting_article_id ON time_accounting (article_id);
CREATE INDEX time_accounting_change_by ON time_accounting (change_by);
CREATE INDEX time_accounting_create_by ON time_accounting (create_by);
CREATE INDEX time_accounting_ticket_id ON time_accounting (ticket_id);
ALTER TABLE time_accounting ADD PRIMARY KEY (id);
ALTER TABLE time_accounting ALTER COLUMN ID SET NOT NULL;
ALTER TABLE time_accounting ALTER COLUMN TICKET_ID SET NOT NULL;
ALTER TABLE time_accounting ALTER COLUMN TIME_UNIT SET NOT NULL;
ALTER TABLE time_accounting ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE time_accounting ALTER COLUMN CREATE_BY SET NOT NULL;
ALTER TABLE time_accounting ALTER COLUMN CHANGE_TIME SET NOT NULL;
ALTER TABLE time_accounting ALTER COLUMN CHANGE_BY SET NOT NULL;


CREATE TABLE time_accounting_action (
	id bigint NOT NULL,
	action varchar(250),
	status varchar(15) NOT NULL
) ;
ALTER  TABLE time_accounting_action OWNER TO otrs;
ALTER TABLE time_accounting_action ADD PRIMARY KEY (id);
ALTER TABLE time_accounting_action ALTER COLUMN ID SET NOT NULL;
ALTER TABLE time_accounting_action ALTER COLUMN STATUS SET NOT NULL;


CREATE TABLE time_accounting_project (
	id bigint NOT NULL,
	project varchar(250),
	description varchar(500),
	status varchar(15) NOT NULL
) ;
ALTER  TABLE time_accounting_project OWNER TO otrs;
ALTER TABLE time_accounting_project ADD PRIMARY KEY (id);
ALTER TABLE time_accounting_project ALTER COLUMN ID SET NOT NULL;
ALTER TABLE time_accounting_project ALTER COLUMN STATUS SET NOT NULL;


CREATE TABLE time_accounting_table (
	id bigint NOT NULL,
	user_id integer NOT NULL,
	project_id bigint NOT NULL,
	action_id bigint NOT NULL,
	remark varchar(250),
	time_start timestamp NOT NULL,
	time_end timestamp NOT NULL,
	period double precision,
	created timestamp NOT NULL
) ;
ALTER  TABLE time_accounting_table OWNER TO otrs;
CREATE INDEX time_accounting_table_project_id_action_id_period_time_start_ti ON time_accounting_table (project_id, action_id, period, time_start, time_end);
CREATE INDEX time_accounting_table_user_id_time_start ON time_accounting_table (user_id, time_start);
CREATE INDEX time_accounting_table_user_id ON time_accounting_table (user_id);
ALTER TABLE time_accounting_table ADD PRIMARY KEY (id);
ALTER TABLE time_accounting_table ALTER COLUMN ID SET NOT NULL;
ALTER TABLE time_accounting_table ALTER COLUMN USER_ID SET NOT NULL;
ALTER TABLE time_accounting_table ALTER COLUMN PROJECT_ID SET NOT NULL;
ALTER TABLE time_accounting_table ALTER COLUMN ACTION_ID SET NOT NULL;
ALTER TABLE time_accounting_table ALTER COLUMN TIME_START SET NOT NULL;
ALTER TABLE time_accounting_table ALTER COLUMN TIME_END SET NOT NULL;
ALTER TABLE time_accounting_table ALTER COLUMN CREATED SET NOT NULL;


CREATE TABLE time_accounting_user (
	id bigint NOT NULL,
	user_id integer NOT NULL,
	description varchar(1020) NOT NULL,
	show_overtime integer,
	create_project integer,
	calendar integer
) ;
ALTER  TABLE time_accounting_user OWNER TO otrs;
CREATE INDEX time_accounting_user_user_id ON time_accounting_user (user_id);
ALTER TABLE time_accounting_user ADD PRIMARY KEY (id);
ALTER TABLE time_accounting_user ALTER COLUMN ID SET NOT NULL;
ALTER TABLE time_accounting_user ALTER COLUMN USER_ID SET NOT NULL;
ALTER TABLE time_accounting_user ALTER COLUMN DESCRIPTION SET NOT NULL;


CREATE TABLE time_accounting_user_period (
	id bigint NOT NULL,
	user_id integer NOT NULL,
	preference_period integer NOT NULL,
	date_start timestamp NOT NULL,
	date_end timestamp NOT NULL,
	weekly_hours double precision,
	leave_days double precision,
	overtime double precision,
	status varchar(15) NOT NULL
) ;
ALTER  TABLE time_accounting_user_period OWNER TO otrs;
CREATE INDEX time_accounting_user_period_status_date_start_date_end ON time_accounting_user_period (status, date_start, date_end);
ALTER TABLE time_accounting_user_period ADD PRIMARY KEY (id);
ALTER TABLE time_accounting_user_period ALTER COLUMN ID SET NOT NULL;
ALTER TABLE time_accounting_user_period ALTER COLUMN USER_ID SET NOT NULL;
ALTER TABLE time_accounting_user_period ALTER COLUMN PREFERENCE_PERIOD SET NOT NULL;
ALTER TABLE time_accounting_user_period ALTER COLUMN DATE_START SET NOT NULL;
ALTER TABLE time_accounting_user_period ALTER COLUMN DATE_END SET NOT NULL;
ALTER TABLE time_accounting_user_period ALTER COLUMN STATUS SET NOT NULL;


CREATE TABLE users (
	id integer NOT NULL,
	login varchar(200) NOT NULL,
	pw varchar(64) NOT NULL,
	title varchar(50),
	first_name varchar(100) NOT NULL,
	last_name varchar(100) NOT NULL,
	valid_id smallint NOT NULL,
	create_time timestamp NOT NULL,
	create_by integer NOT NULL,
	change_time timestamp NOT NULL,
	change_by integer NOT NULL
) ;
ALTER  TABLE users OWNER TO otrs;
CREATE INDEX users_change_by ON users (change_by);
CREATE INDEX users_create_by ON users (create_by);
CREATE INDEX users_valid_id ON users (valid_id);
ALTER TABLE users ADD PRIMARY KEY (id);
ALTER TABLE users ADD UNIQUE (login);
ALTER TABLE users ALTER COLUMN ID SET NOT NULL;
ALTER TABLE users ALTER COLUMN LOGIN SET NOT NULL;
ALTER TABLE users ALTER COLUMN PW SET NOT NULL;
ALTER TABLE users ALTER COLUMN FIRST_NAME SET NOT NULL;
ALTER TABLE users ALTER COLUMN LAST_NAME SET NOT NULL;
ALTER TABLE users ALTER COLUMN VALID_ID SET NOT NULL;
ALTER TABLE users ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE users ALTER COLUMN CREATE_BY SET NOT NULL;
ALTER TABLE users ALTER COLUMN CHANGE_TIME SET NOT NULL;
ALTER TABLE users ALTER COLUMN CHANGE_BY SET NOT NULL;


CREATE TABLE user_preferences (
	user_id integer NOT NULL,
	preferences_key varchar(150) NOT NULL,
	preferences_value text
) ;
ALTER  TABLE user_preferences OWNER TO otrs;
CREATE INDEX user_preferences_user_id ON user_preferences (user_id);
ALTER TABLE user_preferences ALTER COLUMN USER_ID SET NOT NULL;
ALTER TABLE user_preferences ALTER COLUMN PREFERENCES_KEY SET NOT NULL;


CREATE TABLE valid (
	id smallint NOT NULL,
	name varchar(200) NOT NULL,
	create_time timestamp NOT NULL,
	create_by integer NOT NULL,
	change_time timestamp NOT NULL,
	change_by integer NOT NULL
) ;
ALTER  TABLE valid OWNER TO otrs;
CREATE INDEX valid_change_by ON valid (change_by);
CREATE INDEX valid_create_by ON valid (create_by);
ALTER TABLE valid ADD PRIMARY KEY (id);
ALTER TABLE valid ADD UNIQUE (name);
ALTER TABLE valid ALTER COLUMN ID SET NOT NULL;
ALTER TABLE valid ALTER COLUMN NAME SET NOT NULL;
ALTER TABLE valid ALTER COLUMN CREATE_TIME SET NOT NULL;
ALTER TABLE valid ALTER COLUMN CREATE_BY SET NOT NULL;
ALTER TABLE valid ALTER COLUMN CHANGE_TIME SET NOT NULL;
ALTER TABLE valid ALTER COLUMN CHANGE_BY SET NOT NULL;


CREATE TABLE virtual_fs (
	id bigint NOT NULL,
	filename varchar(350) NOT NULL,
	backend varchar(60) NOT NULL,
	backend_key varchar(160) NOT NULL,
	create_time timestamp NOT NULL
) ;
ALTER  TABLE virtual_fs OWNER TO otrs;
CREATE INDEX virtual_fs_backend ON virtual_fs (backend);
CREATE INDEX virtual_fs_filename ON virtual_fs (filename);
ALTER TABLE virtual_fs ADD PRIMARY KEY (id);
ALTER TABLE virtual_fs ALTER COLUMN ID SET NOT NULL;
ALTER TABLE virtual_fs ALTER COLUMN FILENAME SET NOT NULL;
ALTER TABLE virtual_fs ALTER COLUMN BACKEND SET NOT NULL;
ALTER TABLE virtual_fs ALTER COLUMN BACKEND_KEY SET NOT NULL;
ALTER TABLE virtual_fs ALTER COLUMN CREATE_TIME SET NOT NULL;


CREATE TABLE virtual_fs_db (
	id bigint NOT NULL,
	filename varchar(350) NOT NULL,
	content text NOT NULL,
	create_time timestamp NOT NULL
) ;
ALTER  TABLE virtual_fs_db OWNER TO otrs;
CREATE INDEX virtual_fs_db_filename ON virtual_fs_db (filename);
ALTER TABLE virtual_fs_db ADD PRIMARY KEY (id);
ALTER TABLE virtual_fs_db ALTER COLUMN ID SET NOT NULL;
ALTER TABLE virtual_fs_db ALTER COLUMN FILENAME SET NOT NULL;
ALTER TABLE virtual_fs_db ALTER COLUMN CONTENT SET NOT NULL;
ALTER TABLE virtual_fs_db ALTER COLUMN CREATE_TIME SET NOT NULL;


CREATE TABLE virtual_fs_preferences (
	virtual_fs_id bigint NOT NULL,
	preferences_key varchar(150) NOT NULL,
	preferences_value varchar(350)
) ;
ALTER  TABLE virtual_fs_preferences OWNER TO otrs;
CREATE INDEX virtual_fs_preferences_preferences_key_preferences_value ON virtual_fs_preferences (preferences_key, preferences_value);
CREATE INDEX virtual_fs_preferences_virtual_fs_id ON virtual_fs_preferences (virtual_fs_id);
ALTER TABLE virtual_fs_preferences ALTER COLUMN VIRTUAL_FS_ID SET NOT NULL;
ALTER TABLE virtual_fs_preferences ALTER COLUMN PREFERENCES_KEY SET NOT NULL;


CREATE TABLE web_upload_cache (
	form_id varchar(250),
	filename varchar(250),
	content_id varchar(250),
	content_size varchar(30),
	content_type varchar(250),
	disposition varchar(15),
	content text NOT NULL,
	create_time_unix bigint NOT NULL
) ;
ALTER  TABLE web_upload_cache OWNER TO otrs;
ALTER TABLE web_upload_cache ALTER COLUMN CONTENT SET NOT NULL;
ALTER TABLE web_upload_cache ALTER COLUMN CREATE_TIME_UNIX SET NOT NULL;


CREATE TABLE xml_storage (
	xml_type varchar(200) NOT NULL,
	xml_key varchar(250) NOT NULL,
	xml_content_key varchar(250) NOT NULL,
	xml_content_value text
) ;
ALTER  TABLE xml_storage OWNER TO otrs;
CREATE INDEX xml_storage_xml_type ON xml_storage (xml_type);
CREATE INDEX xml_storage_xml_type_xml_content_key ON xml_storage (xml_type, xml_content_key);
CREATE INDEX xml_storage_xml_type_xml_key ON xml_storage (xml_type, xml_key);
ALTER TABLE xml_storage ALTER COLUMN XML_TYPE SET NOT NULL;
ALTER TABLE xml_storage ALTER COLUMN XML_KEY SET NOT NULL;
ALTER TABLE xml_storage ALTER COLUMN XML_CONTENT_KEY SET NOT NULL;
